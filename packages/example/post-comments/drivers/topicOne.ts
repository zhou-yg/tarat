import { computed, inputComputeInServer, model, state } from "tarat/core";
import { ITopic } from "./topic";

export interface ITopicProps {
  id?: number;
}

function topicOne(props: ITopicProps) {
  const topicId = state(props.id);

  const topicsById = model<ITopic[]>("topic", () => {
    const tid = topicId();
    if (tid) {
      return {
        where: {
          id: tid,
        },
      };
    }
  });

  const currentTopic = computed(() => {
    return topicsById()[0];
  });

  return {
    topicId,
    currentTopic,
  };
}

export default topicOne;

/**. auto generated by tarat */
const autoParser = {
  topicOne: {
    names: [
      [0, "topicId"],
      [1, "topicsById"],
      [2, "currentTopic"],
    ],
    deps: [
      ["h", 1, [0]],
      ["h", 2, [1]],
    ],
  },
};
Object.assign(topicOne, {
  __deps__: autoParser.topicOne.deps,
  __names__: autoParser.topicOne.names,
  __name__: "topicOne",
});
/** auto generated by tarat .*/
