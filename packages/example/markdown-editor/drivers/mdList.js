import {
  after,
  combineLatest,
  computed,
  inputCompute,
  inputComputeInServer,
  model,
  state,
  writePrisma,
} from "tarat-core";

export default function mdList(q = {}) {
  const list = model("markdown", () => ({}));

  const title = state("");

  const writeList = writePrisma(list, () => ({
    title: title(),
  }));

  const addMD = inputComputeInServer(function* () {
    yield writeList.create();
    title(() => "");
  });

  return {
    title,
    addMD,
    list,
  };
}

/**. auto generated by tarat */
const autoParser = {
  mdList: {
    names: [
      [0, "list"],
      [1, "title"],
      [2, "writeList"],
      [3, "addMD"],
    ],
    deps: [
      ["h", 2, [0, 1], [0, 1]],
      ["h", 3, [2], [1]],
    ],
  },
};
Object.assign(mdList, {
  __deps__: autoParser.mdList.deps,
  __names__: autoParser.mdList.names,
  __name__: "mdList",
});
/** auto generated by tarat .*/
