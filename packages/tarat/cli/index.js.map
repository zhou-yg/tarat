{"version":3,"file":"index.js","sources":["../../src/config/routes.ts","../../src/util.ts","../../src/config/deps.ts","../../src/config.ts","../../src/plugins/runningContext.ts","../../src/plugins/prisma.ts","../../src/plugins/cookies.ts","../../src/middlewares/unserialize.ts","../../src/middlewares/runner.ts","../../src/middlewares/page.ts","../../src/compiler/plugins/rollup-plugin-alias-driver.ts","../../src/middlewares/pureDevCache.ts","../../src/server.ts","../../src/compiler/analyzer.ts","../../src/compiler/constants.ts","../../src/compiler/compose.ts","../../src/compiler/ast.ts","../../src/compiler/prebuild.ts","../../src/compiler/build.ts","../../src/compiler/dependenceGraph.ts","../../cli/dev.ts","../../cli/build.ts","../../cli/start.ts","../../cli/any.ts","../../cli/index.ts"],"sourcesContent":["import * as path from 'path'\nimport * as fs from 'fs'\nimport { last } from '../util'\n\nexport interface IViewConfig {\n  /**\n   * The unique id for this route, named like its `file` but without the\n   * extension. So `app/routes/gists/$username.jsx` will have an `id` of\n   * `routes/gists/$username`.\n   */\n  id: string\n  parentId: string\n  /**\n   * The path this route uses to match on the URL pathname.\n   */\n  path: string\n  /**\n   * single file name without file extension\n   */\n  name: string\n\n  index?: boolean\n  // file absolute path relative to current project\n  file: string\n\n  dir: boolean\n\n  dynamic: boolean\n}\n\nconst isIndexFlagn = (f: string) => /^index.(j|t)sx$/.test(f) || /\\/index.(j|t)sx$/.test(f)\n\nconst isPageFile = (f: string) => /\\.(j|t)sx$/.test(f)\n\nfunction defineView (viewDir: string, file: string, name: string, parent?: IViewConfig): IViewConfig[] {\n\n  const configs: IViewConfig[] = []\n  const currentFileOrDirPath = path.join(viewDir, file)\n  const current: IViewConfig = {\n    id: file,\n    parentId: parent?.id || '',\n    path: file.replace(/\\.\\w+/, ''),\n    file,\n    name: name.replace(/\\.\\w+/, ''),\n    index: isIndexFlagn(file),\n    dir: fs.lstatSync(currentFileOrDirPath).isDirectory(),\n    dynamic: /^\\:/.test(name)\n  }\n  if (current.dir) {\n    const childConfigs = readViews(viewDir, file, current)\n    configs.push(...childConfigs)\n  }\n  configs.push(current)\n\n  return configs\n}\n\nexport function readViews (viewDir: string, dir: string, parent?: IViewConfig) {\n  const d = path.join(viewDir, dir)\n  if (!fs.existsSync(d)) {\n    return []\n  }\n  const views = fs.readdirSync(d)\n\n  const viewConfigs = views.filter(f => {\n    const file = path.join(viewDir, dir, f)\n\n    return isPageFile(file) || fs.lstatSync(file).isDirectory()\n  }).map(f => {\n    const file = path.join(dir, f)\n    return defineView(viewDir, file, f, parent)\n  })\n\n  return viewConfigs.flat()\n}\n\nexport interface IRouteChild extends IViewConfig {\n  children: IRouteChild[]\n}\n\ninterface IRoutesTree {\n  [k: string]: IRouteChild\n}\n\nexport function defineRoutesTree (pages: IViewConfig[]) {\n  const routesMap: IRoutesTree = {}\n  pages.forEach(p => {\n    routesMap[p.id] = Object.assign({\n      children: []\n    }, p)\n  })\n\n  pages.forEach(p => {\n    if (p.parentId) {\n      const child = routesMap[p.id]\n      routesMap[p.parentId].children.push(child)\n    }\n  })\n\n  return Object.values(routesMap).filter(p => !p.parentId)\n}\n\nexport function matchRoute (pages: IViewConfig[], pathname: string) {\n  let directlyMatchedPage = pages.find(v => v.path === pathname || v.path === path.join(pathname, 'index'))\n  if (!directlyMatchedPage) {\n    // pathname maybe is dynmaic route\n    const arr = pathname.split('/')\n    directlyMatchedPage = pages.find(v => {\n      const routePathArr = v.path.split('/')\n      return (\n        arr.length === routePathArr.length &&\n        arr.slice(0, -1).join('/') === routePathArr.slice(0, -1).join('/') &&\n        v.dynamic\n      )\n    })\n  } \n  return directlyMatchedPage \n}\n","import * as fs from 'fs'\nimport * as path from 'path'\nimport rimraf from 'rimraf'\nimport { IViewConfig } from './config'\nimport os from \"os\";\nimport { isEqual } from \"tarat/core\";\n\nexport function loadJSON (f: string) {\n  return JSON.parse(fs.readFileSync(f).toString())\n}\n\nexport function emptyDirectory (dir: string) {\n  if (fs.existsSync(dir)) {\n    rimraf.sync(dir)\n  }\n\n  fs.mkdirSync(dir)\n}\n\nexport function lowerFirst (s: string) {\n  return s[0].toLowerCase() + s.substring(1)\n}\n\nexport function tryMkdir(dir: string) {\n  !fs.existsSync(dir) && fs.mkdirSync(dir)\n}\n\nexport function getDefeaultRoute (pages: IViewConfig[]) {\n  let root: IViewConfig = pages[0]\n  pages.forEach(p => {\n    const p1 = p.path.split('/')\n    const p2 = root.path.split('/')\n    if (p1.length <= p2.length) {\n      if (p1.length === p2.length) {\n        root = p.index ? p : root\n      } else {\n        root = p\n      }\n    }\n  })\n\n  return root.name === 'index' ? '' : root.name\n}\n\nexport function logFrame (content: string, length = 100) {\n  const lineArr = new Array(length).fill('-')  \n  const line2 = lineArr.join('')\n\n  const title = ' tarat '\n  lineArr.splice(1, 0, title)\n  const line1 = lineArr.slice(0, -title.length).join('')\n\n  const rows = content.split('\\n').map(c => {\n    return c.trim().match(new RegExp(`.{1,${length - 4}}`, 'g'))\n  }).filter(Boolean).flat()\n  \n  const padLen = length - 4\n\n  return console.log(\n    [\n      line1,\n      ...(rows?.map(s => `| ${s}`) || []),\n      line2\n    ].join('\\n')\n  )\n}\n\nexport function getAddress() {\n  const address =\n    process.env.HOST ||\n    Object.values(os.networkInterfaces())\n      .flat()\n      .find((ip) => ip?.family === \"IPv4\" && !ip.internal)?.address;\n\n  return address\n}\n\nexport function equalFileContent(c1: string, c2: string) {\n  return isEqual(\n    c1.split('\\n').map(r => r.trim()).filter(Boolean),\n    c2.split('\\n').map(r => r.trim()).filter(Boolean),\n  )\n}\n\nexport function isFileEmpty (code: string) {\n  return code.replace(/\\n/g, '').trim().length === 0\n}\n\ninterface IFile {\n  isDir: boolean\n  path: string\n  file: string\n  dir: string\n}\nexport function traverseDir (dir: string, callback: (f: IFile) => void) {\n  const files = fs.readdirSync(dir)\n  files.forEach(f => {\n    const p = path.join(dir, f)\n    const isDir = fs.lstatSync(p).isDirectory()\n    callback({\n      isDir,\n      dir,\n      file: f,\n      path: p\n    })\n    if (isDir) {\n      traverseDir(p, callback)\n    }\n  })\n}\n\nexport function time (sec = true) {\n  let st = Date.now()\n  return () => {\n    const v = Date.now() - st\n    return sec ? Math.floor(v / 1000) : v\n  }\n}\n\nexport function __aa () {\n\n}\n\nexport function traverse(\n  target: Record<string, any>,\n  callback: (arrPath: string[], value: any) => void,\n  parentKeys?: string[]\n) {\n  if (!parentKeys) {\n    parentKeys = []\n  }\n  Object.entries(target).forEach(([key, value]) => {\n    const currentKeys = parentKeys.concat(key)\n    value && callback(currentKeys, value)\n    if (typeof value === 'object' && value) {\n      traverse(value, callback, currentKeys)\n    }\n  })\n}\n\nexport function last<T> (arr: T[]):T {\n  return arr[arr.length - 1]\n}\n","import { loadJSON, logFrame } from \"../util\"\nimport * as path from 'path'\nimport { existsSync } from \"fs\"\nimport chalk from 'chalk'\n\ninterface IPkg {\n  dependencies: {\n    [k: string]: string\n  }\n}\nexport function findDependencies (cwd: string) {\n  const pkgJSON: IPkg = loadJSON(path.join(cwd, 'package.json'))\n  const pkgModules = Object.keys(pkgJSON.dependencies || {})\n\n  const modules: string[] = pkgModules.filter(moduleName => {\n    const dir = path.join(cwd, 'node_modules', moduleName)\n    const pkg = path.join(dir, 'package.json')\n    if (existsSync(pkg)) {\n      const r1 = !!loadJSON(pkg).tarat\n      return r1\n    } else {\n      logFrame(chalk.red(`dependency module \"${moduleName}\" hasnt installed`))\n    }\n  })\n\n  return modules\n}\n","import * as path from 'path'\nimport * as fs from 'fs'\nimport l from 'lodash'\nimport { readViews } from './config/routes'\nimport { isFileEmpty, loadJSON, logFrame } from './util'\nimport chalk from 'chalk'\nimport { findDependencies } from './config/deps'\nconst { merge } = l\n\nexport const defaultConfig = () => ({\n  // client about\n  viewsDirectory: 'views', // in tarat the display unit maybe page or component, they should belong to \"views\"\n  driversDirectory: 'drivers',\n  composeDriversDirectory: 'compose',\n  modelsDirectory: 'models',\n  appDirectory: 'app',\n  pageDirectory: 'pages',\n\n  publicDirectory: 'public',\n\n  entry: 'entry', // jsx|tsx|css|less|json\n\n  entryServer: 'entry.server', // .(j|t)sx in app\n  routesServer: 'routes.server', // serve for tarat self\n  routes: 'routes', // serve for tarat self\n\n  ts: false,\n\n  devCacheDirectory: '.tarat', // in cwd\n  buildDirectory: 'dist', // in cwd\n\n  clientDir: 'client',\n  serverDir: 'server',\n\n  appClientChunk: 'chunks',\n\n  cjsDirectory: 'cjs',\n  esmDirectory: 'esm',\n\n  modelEnhance: 'model.enhance.json',\n  prismaModelPart: 'part.prisma', // postfix\n  targetSchemaPrisma: 'schema.prisma',\n  schemaIndexes: 'indexes',\n\n  // server side\n  apiPre: '_hook',\n\n  diffPath: '_diff',\n\n  port: 9100,\n  model: {\n    engine: 'prisma'\n  },\n\n  // compose\n  compose: []\n})\n\nexport type IDefaultConfig = ReturnType<typeof defaultConfig> & {\n  cjsDirectory: 'cjs',\n  esmDirectory: 'esm',\n  model?: {\n    engine: 'prisma' | 'er'\n  }\n}\n\n\nconst configFile = 'tarat.config.js'\n\nexport interface IViewConfig {\n  /**\n   * The unique id for this route, named like its `file` but without the\n   * extension. So `app/routes/gists/$username.jsx` will have an `id` of\n   * `routes/gists/$username`.\n   */\n  id: string\n  parentId: string\n  /**\n   * The path this route uses to match on the URL pathname.\n   */\n  path: string\n  /**\n   * single file name without file extension\n   */\n  name: string\n\n  index?: boolean\n  // file absolute path relative to current project\n  file: string\n\n  dir: boolean\n\n  dynamic: boolean\n}\n\nfunction readPages (viewDir: string, dir: string) {\n  const pages = readViews(viewDir, dir)\n\n  return pages\n}\n\nexport interface IServerHookConfig {\n  filePath: string\n  file: string\n  name: string\n  dir: string\n}\n\nexport function readDrivers(dir: string) {\n  if (!fs.existsSync(dir)) {\n    return []\n  }\n  const drivers = fs.readdirSync(dir)\n\n  const hookConfigs: IServerHookConfig[] = []\n  // check drivers\n  drivers.forEach(f => {\n    const p = path.join(dir, f)\n    if (fs.lstatSync(p).isDirectory()) {\n      const children = readDrivers(p)\n      hookConfigs.push(...children)\n    }\n  })\n  \n  const hookConfigs2 = drivers.filter(f => {\n    const filePath = path.join(dir, f)\n    return fs.lstatSync(filePath).isFile()\n  }).map(f => {\n\n    const filePath = path.join(dir, f)\n    const name = f.replace(/\\.\\w+/, '')\n\n    const code = fs.readFileSync(filePath).toString()\n    const empty = isFileEmpty(code)\n    if (!empty) {\n      const exportDefaultNames = code.match(/export default (function [A-Za-z0-9_]+;?|[A-Za-z0-9_]+);?/)\n      const exportDefaultAuto = code.match(/export { default }/)\n      if (exportDefaultNames) {\n        if (exportDefaultNames[1] !== name && exportDefaultNames[1] !== `function ${name}`) {\n          logFrame(\n            `The default export name mismatch file name\n            export default name is ${chalk.red(exportDefaultNames[1])}\n            file name is ${chalk.green(name)}`\n          )\n          throw new Error('[readDrivers] error 2')  \n        }\n      } else if (!exportDefaultAuto) {\n  \n        logFrame(`Must have a default export in ${filePath}`)\n        throw new Error('[readDrivers] error 1')\n      }\n    }\n\n    return {\n      dir,\n      filePath,\n      file: f,\n      name,\n    }\n  })\n\n  hookConfigs.push(...hookConfigs2)\n\n  return hookConfigs\n}\n\ntype UnPromisify<T> = T extends Promise<infer R> ? R : T;\n\ntype IReadConfigResult = UnPromisify<ReturnType<typeof readConfig>>\n\nexport interface IConfig extends IReadConfigResult{\n  model: {\n    engine: 'prisma' | 'er'\n  }\n}\n\nfunction getOutputFiles (config: IDefaultConfig, cwd:string, outputDir: string) {\n  const outputClientDir = path.join(outputDir, config.clientDir)\n  const outputServerDir = path.join(outputDir, config.serverDir)\n\n  const outputAppServerDir = path.join(outputServerDir, config.appDirectory)\n  const outputAppClientDir = path.join(outputClientDir, config.appDirectory)\n\n\n  return {\n    outputDir, \n    outputClientDir,\n    outputServerDir,\n    // prisma\n    outputModelsDir: path.join(outputDir, config.modelsDirectory),\n    outputModelSchema: path.join(outputDir, config.modelsDirectory, config.targetSchemaPrisma),\n    modelEnhanceFile: path.join(cwd, config.modelsDirectory, config.modelEnhance),\n    modelTargetFile: path.join(cwd, config.modelsDirectory, config.targetSchemaPrisma),\n    // views\n    outputViewsDir: path.join(outputDir, config.viewsDirectory),\n    outputDriversDir: path.join(outputDir, config.driversDirectory),\n\n    /** server */\n\n    // app\n    outputAppServerDir,\n    // router\n    autoGenerateServerRoutes: path.join(outputAppServerDir, `${config.routesServer}${config.ts ? '.tsx' : '.jsx'}`),    \n    distServerRoutes: path.join(outputAppServerDir, `${config.routesServer}.js`),\n    distServerRoutesCSS: path.join(outputAppServerDir, `${config.routesServer}.css`),\n    // entry\n    distEntryJS: path.join(outputAppServerDir, `${config.entryServer}.js`),\n    distEntryCSS: path.join(outputAppServerDir, `${config.entryServer}.css`),\n    // drivers\n    outputServerDriversDir: path.join(outputServerDir, config.driversDirectory),\n\n    /** client */\n\n    // app\n    outputAppClientDir,\n    // router\n    autoGenerateClientRoutes: path.join(outputAppClientDir, `${config.routes}${config.ts ? '.tsx' : '.jsx'}`),\n    clientRoutes: path.join(outputAppClientDir, 'index.js'),\n    clientRoutesCSS: path.join(outputAppClientDir, 'index.css'),\n    // drivers\n    outputClientDriversDir: path.join(outputClientDir, config.driversDirectory),\n  }\n}\n\nfunction readEntryCSS (pre: string, ) {\n  const postfix = ['less', 'css']\n  let r = ''\n  postfix.forEach(p => {\n    const f = `${pre}.${p}`\n    if(fs.existsSync(f)) {\n      if (r) {\n        throw new Error(`[config.readEntryCSS] should not have duplcate style file from ${postfix}`)\n      } else {\n        r = f\n      }\n    }\n  })\n  return r\n}\n\nexport async function readConfig (arg: {\n  cwd: string,\n  isProd?: boolean\n}) {\n  const { cwd, isProd } = arg\n  const configFileInPath = path.join(cwd, configFile)\n\n  let config = defaultConfig() as IDefaultConfig\n  if (fs.existsSync(configFileInPath)) {\n    const configInFile = require(configFileInPath)\n    merge(config, configInFile)\n  }\n\n  const pacakgeJSON = loadJSON(path.join(cwd, 'package.json'))\n\n  const viewsDirectory = path.join(cwd, config.viewsDirectory)\n  const driversDirectory = path.join(cwd, config.driversDirectory)\n  const appDirectory = path.join(cwd, config.appDirectory)\n  const pagesDirectory = path.join(appDirectory, config.pageDirectory)\n\n  const views = readViews(viewsDirectory, '/')\n  views.forEach(c => {\n    c.file = path.join('./', config.viewsDirectory, c.file)\n  })\n\n  const pages = readPages(pagesDirectory, '/')\n  pages.forEach(c => {\n    c.file = path.join('./', config.appDirectory, config.pageDirectory, c.file)\n  })\n\n  const drivers = readDrivers(driversDirectory).map(d => {\n    return {\n      ...d,\n      relativeDir: path.relative(driversDirectory, d.dir)\n    }\n  })\n\n  const entryCSS = readEntryCSS(path.join(cwd, config.appDirectory, config.entry))\n\n\n  const devPointFiles = getOutputFiles(config, cwd, path.join(cwd, config.devCacheDirectory))\n  const buildPointFiles = getOutputFiles(config, cwd, path.join(cwd, config.buildDirectory))\n  // default to \"dev\"\n  const pointFiles = isProd ? buildPointFiles : devPointFiles\n\n  const dependencyModules = findDependencies(cwd)\n\n  return {\n    ...config,\n    pacakgeJSON,\n    isProd,\n    entryCSS,\n    pointFiles,\n    devPointFiles,\n    buildPointFiles,\n    cwd,\n    drivers,\n    views,\n    pages,\n    dependencyModules,\n  }\n}\n","import { CurrentRunnerScope, IRunningContext, loadPlugin } from 'tarat/core'\nimport { join } from 'path'\n\nlet currentRunningMap: Map<CurrentRunnerScope, IRunningContext> = new Map()\n\nexport async function setRunning ()  {\n  loadPlugin('GlobalRunning', {\n    setCurrent (scope, api) {\n      // console.trace('scope, api: ', !!scope, api);\n      currentRunningMap.set(scope, api)\n    },\n    getCurrent (scope) {\n      // console.log('currentRunningMap: ', currentRunningMap);\n      return currentRunningMap.get(scope) || null\n    }\n  })\n}\n","import { loadPlugin } from 'tarat/core'\nimport { join } from 'path'\nimport { IConfig } from '../config'\nimport * as prismaInternals from '@prisma/internals'\nimport { existsSync, readFileSync } from 'fs'\n\nexport async function setPrisma (config: IConfig)  {\n  const { cwd } = config\n  const schemaFile = join(cwd, config.modelsDirectory, config.targetSchemaPrisma)\n\n  let client: any;\n  if (existsSync(schemaFile)) {\n    const gen = await prismaInternals.getGenerator({\n      schemaPath: schemaFile,\n      dataProxy: false\n    })\n    const output = gen.config.output.value\n    client = (require(output))\n  } else {\n    // make sure import the prisma from current development project\n    // @ts-ignore\n    client = (await import(join(cwd, 'node_modules/@prisma/client/index.js')))\n  }\n\n  if (!client.PrismaClient) {\n    throw new Error('[setPrisma] error, prisma.PrismaClient not found please run prisma generate first')\n  }\n  const prisma = new client.PrismaClient()\n  console.log('prisma.$connect: ', prisma.$connect);\n  const connectResult = prisma.$connect();\n  connectResult.then(() => {\n    console.log('connect success')\n  })\n  // connectResult.then(() => {\n  //   console.log('connect success')\n  //   const r = prisma.storageItem.create({\n  //     \"data\": {\n  //       \"name\": \"kkk\",\n  //       \"link\": \"/注册界面.png\",\n  //       \"user\": {\n  //         \"connect\": {\n  //           \"id\": \"cl77pu30l0024fbuvcot5gu5e\"\n  //         }\n  //       }\n  //     }\n  //   })\n  // }).catch(e => {\n  //   console.log('e: ', e);\n  // })\n\n  loadPlugin('Model', {\n    async find(from: string, e, w) {\n      return prisma[e].findMany(w).then(r => r)\n    },\n    async update(from: string, e, w) {\n      return prisma[e].update(w).then(r => r)\n    },\n    async remove(from: string, e, d) {\n      return prisma[e].delete(d).then(r => r)\n    },\n    async create(from: string, e, q) {\n      return prisma[e].create(q).then(r => r)\n    },\n    // should check relation here\n    async executeDiff(from: string, e, d) {\n      await Promise.all(d.create.map(async obj => {\n        await prisma[e].create({\n          data: obj.value\n        })\n      }))\n      await Promise.all(d.update.map(async obj => {\n        const { source } = obj\n        if (source.id === undefined || source.id === null) {\n          throw new Error('[update] must with a id')\n        }\n        await prisma[e].update({\n          where: {\n            id: source.id\n          },\n          data: obj.value\n        })\n      }))\n      await Promise.all(d.remove.map(async obj => {\n        const { source, value } = obj\n        if (value.id === undefined || value.id === null) {\n          throw new Error('[remove] must with a id')\n        }\n        await prisma[e].delete({\n          where: {\n            id: value.id\n          },\n        })\n      }))\n    },\n  })\n}\n","import { getPlugin, IRunningContext, loadPlugin } from 'tarat/core'\n\nexport function setCookies () {\n\n  loadPlugin('cookie', {\n    async set(s, k, value) {\n      console.trace('[setCookies.set]: ', k, value);\n      console.log('[setCookies.set]: ', getPlugin('GlobalRunning').getCurrent(s), !!s);\n      if (typeof value === 'string'){\n        getPlugin('GlobalRunning').getCurrent(s)?.cookies.set(k, value)\n      }\n    },\n    async get(s, k): Promise<any> {\n      const v = getPlugin('GlobalRunning').getCurrent(s)?.cookies.get(k)\n      // console.trace('[setCookies.get] s, k: ', k, v);\n      // console.log('[setCookies.get] s, k: ', getPlugin('GlobalRunning').getCurrent(s));\n      return v\n    },\n    clear(s, k) {\n      getPlugin('GlobalRunning').getCurrent(s)?.cookies.set(k, '')\n    },\n  })\n}","import { get, IHookContext, set } from 'tarat/core'\nimport Application from 'koa'\nimport { BINARY_FILE_KEY_SPLIT_CHAR, BINARY_FILE_TYPE_PLACEHOLDER, parseWithUndef } from 'tarat/connect'\nfunction hasAnyFiles (req: Application.ExtendableContext['request'] & { body: any, files: any }) {\n  return req.files && Object.keys(req.files).length > 0\n}\n\nexport interface PersistentFile {\n  lastModifiedDate: Date,\n  filepath: string,\n  newFilename: string,\n  originalFilename: string,\n  mimetype: 'application/octet-stream',\n  hashAlgorithm: boolean,\n  size: number,\n}\n\nexport class SimulateBrowserFile implements PersistentFile {\n  lastModifiedDate: Date\n  filepath: string\n  newFilename: string\n  originalFilename: string\n  mimetype: 'application/octet-stream'\n  hashAlgorithm: boolean\n  size: number\n  name: string\n  constructor(f: PersistentFile) {\n    Object.assign(this, f)\n    this.name = f.originalFilename\n  }\n}\n\n\nexport function unserializeObjToJSON (obj: Record<string, any>) {\n  Object.entries(obj).forEach(([k, v]) => {\n    if (!(v instanceof SimulateBrowserFile)) {\n      obj[k] = parseWithUndef(v)\n    }\n  })\n  Object.entries(obj).forEach(([k, v]) => {\n    if (v instanceof SimulateBrowserFile) {\n      const kArr = k.split(BINARY_FILE_KEY_SPLIT_CHAR)\n      const placeholderValue = get(obj, kArr)\n      if (placeholderValue === BINARY_FILE_TYPE_PLACEHOLDER) {\n        set(obj, kArr, v)\n        delete obj[k]\n      }\n    }\n  })\n  return obj\n}\n\n/**\n * prevent File from sending to client side\n */\nexport function filterFileType (c: IHookContext): IHookContext {\n\n  const data = c.data.map(v => {\n    if (v[1] instanceof SimulateBrowserFile) {\n      return ['unserialized']\n    }\n    return v\n  })\n  return Object.assign({}, c, {\n    data\n  })\n}\n\nexport default function unserializeWithFile (): Application.Middleware {\n  return async (ctx, next) => {\n    const valid = hasAnyFiles(ctx.request as any)\n    if (valid) {\n      const { body, files } = ctx.request as any\n      console.log('files: ', files);\n      Object.entries(files).forEach(([k, v]: [string, PersistentFile]) => {\n        body[k] = new SimulateBrowserFile(v)\n      })\n      \n      const newBody = unserializeObjToJSON({...body});\n      (ctx.request as any).body = newBody\n    }\n    await next()\n  }\n}\n","import {\n  IHookContext, Runner, getPlugin, IDiff, debuggerLog, startdReactiveChain,\n  stopReactiveChain\n} from 'tarat/core'\nimport { parseWithUndef, stringifyWithUndef } from 'tarat/connect'\nimport { join } from 'path'\nimport Application from 'koa'\nimport type { IConfig, IServerHookConfig } from '../config'\nimport { setCookies, setPrisma, setRunning, setER  } from '../plugins'\nimport { buildDrivers } from '../compiler/prebuild'\nimport { loadJSON } from '../util'\nimport { filterFileType } from './unserialize'\n\nfunction matchHookName (p: string) {\n  const arr = p.split('/').filter(Boolean)\n  return {\n    pre: arr[0],\n    driverName: arr[1]\n  }\n}\n\nexport function wrapCtx (ctx: any) {\n  return {\n    cookies: {\n      set (name: any, value: any) {\n        console.log('[wrapCtx.cookies] name, value: ', name, value);\n        return ctx.cookies.set(name, value)\n      },\n      get (name: any) {\n        console.log('[wrapCtx.cookies] get name: ', name);\n        const val = ctx.cookies.get(name)\n        return val\n      }\n    }\n  }\n}\n\n/**\n * @TODO should provide by @tarat-run by default\n */\nexport default function taratMiddleware (args: {\n  config: IConfig\n}) : Application.Middleware{\n  const { config } = args\n  const { drivers, apiPre, diffPath, cwd, model, pointFiles } = config\n\n  setRunning()\n  setCookies()\n  if (model?.engine === 'prisma') {\n    setPrisma(config)\n  } else if (model?.engine === 'er') {\n    setER()\n  }\n\n  return async (ctx, next) => {\n    const { path, body } = ctx.request\n    const { pre, driverName } = matchHookName(path)\n    if (pre === apiPre && ctx.request.method === 'POST') {      \n      const hookConfig = drivers.find(h => h.name === driverName)\n      if (hookConfig) {\n\n        const driver = config.drivers.find(d => d.name === driverName)\n\n        // driver has double nested output structure\n        const BMPath = join(pointFiles.outputServerDriversDir, config.cjsDirectory, driver.relativeDir, `${driverName}.js`)\n        const BM = require(BMPath)\n\n        const c: IHookContext = typeof body === 'string' ? parseWithUndef(body) : body;\n\n        let runner = new Runner(BM.default)\n        \n        let scope = runner.prepareScope(c.initialArgList, c)\n        getPlugin('GlobalRunning').setCurrent(scope, wrapCtx(ctx))\n\n        console.log('==== before exeexecuteDriver ===============')\n\n        const chain1 = startdReactiveChain(`${driverName}(init)`)\n\n        runner.executeDriver(scope)\n\n        await scope.ready()\n\n        chain1.stop()\n        chain1.print()\n\n        // debuggerLog(true)\n\n        const chain2 = startdReactiveChain(`${driverName}:call(${c.index})`)\n\n        if (c.index !== undefined) {\n          await scope.callHook(c.index, c.args)\n        }\n\n        await scope.ready()\n\n        getPlugin('GlobalRunning').setCurrent(scope, null)\n\n        chain2.stop()\n        chain2.print()\n\n        const context = scope.createPatchContext()\n        /* @TODO: stringifyWithUndef prevent sending server File to browser */\n        const contextWithoutFile = filterFileType(context)\n        ctx.body = stringifyWithUndef(contextWithoutFile);\n\n        (runner as any) = null;\n        (scope as any) = null;\n\n        console.log(`[${driverName}] is end \\n ---`)\n      } else {\n        await next()        \n      }\n    } else if (pre === diffPath && ctx.request.method === 'POST') {\n      const c: { entity: string, diff: IDiff } = JSON.parse(ctx.request.body)\n      await getPlugin('Model').executeDiff('@unknownExecuteDiff', c.entity, c.diff)\n      ctx.body = JSON.stringify({})\n    } else {\n      await next()\n    }  \n  } \n}\n","import Application from \"koa\";\nimport { IConfig, IViewConfig } from \"../config\";\nimport { compile } from 'ejs'\nimport * as fs from 'fs'\nimport * as path from 'path'\nimport { ViteDevServer } from \"vite\";\nimport { fileURLToPath } from 'url'\nimport { CurrentRunnerScope, debuggerLog, getPlugin, IHookContext, Runner, startdReactiveChain, stopReactiveChain } from \"tarat/core\";\nimport { wrapCtx } from \"./runner\";\nimport { renderToString } from 'react-dom/server'\nimport { RenderDriver, renderWithDriverContext, DriverContext } from 'tarat/connect'\nimport React, { createElement } from \"react\";\nimport { matchRoute } from \"../config/routes\";\nimport chalk from 'chalk'\n\nconst templateFile = './pageTemplate.ejs'\nconst templateFilePath = path.join(__dirname, templateFile)\n\nconst template = compile(fs.readFileSync(templateFilePath).toString())\n\nfunction transformIndexHtml (html: string, c: IConfig) {\n  return html.replace(\n    new RegExp(`${c.pointFiles.outputDir}`, 'g'),\n    ''\n  )\n}\n\nasync function renderPage (ctx: Application.ParameterizedContext, config: IConfig) {\n\n  const { distServerRoutes, distEntryJS, distEntryCSS, distServerRoutesCSS } = config.pointFiles\n\n  let entryFunctionModule = (doc: React.ReactElement) => doc\n  if (fs.existsSync(distEntryJS)) {\n    entryFunctionModule = require(distEntryJS)\n  }\n  const routesEntryModule = require(distServerRoutes)\n\n  const driver = new RenderDriver()\n  driver.mode = 'collect'\n\n  let cancelGlobalRunning = () => {}\n\n  console.log('[before driver.onPush] : ');\n\n  driver.onPush(scope => {\n\n    getPlugin('GlobalRunning').setCurrent(scope, wrapCtx(ctx))\n    cancelGlobalRunning = () => {\n      getPlugin('GlobalRunning').setCurrent(scope, null) \n    }\n  })\n\n  const routerLocation = ctx.request.path + ctx.request.search\n\n  const chain = startdReactiveChain('[renderWithDriverContext first]')\n  const appEntry = renderWithDriverContext(\n    entryFunctionModule(\n      routesEntryModule({\n        location: routerLocation\n      })\n    ),\n    driver,\n  )\n\n  debuggerLog(true)\n\n  console.log('[before renderToString] first ');\n  const html = renderToString(appEntry.root)\n\n  appEntry.cancelAdaptor()\n  driver.pushListener = undefined\n  cancelGlobalRunning()\n\n  let allRunedHook: CurrentRunnerScope<any>[] = []\n  for (const BMArr of driver.BMValuesMap.values()) {\n    allRunedHook = allRunedHook.concat(BMArr)\n  }\n  await Promise.all(allRunedHook.map((scope) => {\n    return scope.ready()\n  }))\n  chain.stop()\n  chain.print()\n\n  console.log('---- await first done ----')\n\n  const st = Date.now()\n\n  driver.switchToServerConsumeMode()\n\n  const chain2 = startdReactiveChain('[renderWithDriverContext second]')\n\n  const appEntryUpdate = renderWithDriverContext(\n    entryFunctionModule(\n      routesEntryModule({\n        location: routerLocation\n      })\n    ),\n    driver,\n  )\n\n  const html2 = renderToString(appEntryUpdate.root)\n\n  chain2.stop()\n  chain2.print()\n\n  const cost = Date.now() - st\n\n  const css = []\n  fs.existsSync(distEntryCSS) && css.push(distEntryCSS)\n  fs.existsSync(distServerRoutesCSS) && css.push(distServerRoutesCSS)\n\n  console.log(`[${routerLocation}] is end. second rendering cost ${chalk.blue(cost)} ms \\n ---`)\n\n  return {\n    driver,\n    html,\n    html2,\n    // css: css + entryServerCss,\n    css,\n  }\n}\n\n/**\n * @TODO should provide by default\n */\n export default function page (args: {\n   config: IConfig\n   pages: IViewConfig[]\n   vite?: ViteDevServer\n}) : Application.Middleware {\n\n  const config = args.config\n\n  return async (ctx, next) => {\n    const pathname = ctx.request.path\n    const viewConfig = matchRoute(args.pages, pathname)\n    if (viewConfig) {\n      let context: Record<string, IHookContext[]> = {}\n      let ssrHTML = ''\n\n      console.log('>> start render page path=', pathname)\n\n      const r = await renderPage(ctx, args.config)\n      if (r) {\n        for (const v of r.driver.BMValuesMap) {\n          context[v[0]] = v[1].map((scope: CurrentRunnerScope<any>) => scope.createBaseContext())\n        }\n        ssrHTML = r.html2\n      }\n\n      const { autoGenerateClientRoutes, clientRoutes } = config.pointFiles\n\n      const src = config.isProd ? clientRoutes : autoGenerateClientRoutes\n\n      let html = template({\n        title: viewConfig.name,\n        hookContextMap: JSON.stringify(context),\n        src,\n        css: r?.css,\n        ssrHTML,\n        configJSON: JSON.stringify({\n          apiPre: args.config.apiPre,\n          diffPath: args.config.diffPath,\n        })\n      })\n\n      // use on dev\n      if (args.vite && !config.isProd) {\n        html = await args.vite.transformIndexHtml(pathname, html)\n      } else {\n        html = transformIndexHtml(html, config)\n      }\n\n      ctx.body = html\n\n    } else {\n      await next()\n    }\n  }\n}\n","import * as fs from 'fs'\nimport * as path from 'path'\nimport { Plugin } from 'vite'\nimport { IConfig } from '../../config'\nimport { loadJSON } from '../../util'\n\nfunction isDriver (path: string, tag: string) {\n  const pathArr = path.split('/')\n  \n  return pathArr.includes(tag)\n}\n\nexport default function aliasDriverRollupPlugin (c: IConfig, env: 'server' | 'client'): Plugin {\n  const {\n    cwd,\n    esmDirectory,\n    driversDirectory\n  } = c\n  const {\n    outputClientDir,\n    outputServerDir\n  } = c.pointFiles\n\n  const envDriverOutputDir = env === 'server' ? outputServerDir : outputClientDir\n\n  const defaultFormat = esmDirectory\n\n  return {\n    name: 'tarat-alias-driver',\n    async resolveId (source: string, importer: string, options) {\n\n      if (!importer) {\n        return null\n      }\n      if (isDriver(source, driversDirectory)) {\n        const resolution = await this.resolve(source, importer, { skipSelf: true, ...options })\n        if (!resolution || resolution.external) {\n          return resolution\n        }\n        const aliasSource = resolution.id\n          .replace(cwd, envDriverOutputDir)\n          .replace(new RegExp(`\\\\/${driversDirectory}\\\\/`), `/${driversDirectory}/${defaultFormat}/`)\n          .replace(/\\.ts$/, '.js')\n        \n        const r2 = await this.resolve(aliasSource, importer, { skipSelf: true, ...options })\n        return r2\n      }\n    },\n  }\n}\n","import Application from \"koa\";\nimport { IConfig } from \"../config\";\nexport default function pureDevCache (args: {\n  config: IConfig\n}) : Application.Middleware {\n\n const config = args.config\n\n return async (ctx, next) => {\n  for (const k in require.cache) {\n    if (\n      k.startsWith(config.pointFiles.outputDir)\n    ) {\n      delete require.cache[k]\n    }\n  }\n\n  await next()\n }\n}","import Application from \"koa\";\nimport koaBody from 'koa-body'\nimport cors from '@koa/cors'\nimport Koa from 'koa'\nimport staticServe from 'koa-static'\nimport e2k from 'express-to-koa'\nimport chalk from 'chalk'\nimport taratRunner from \"./middlewares/runner\";\nimport page from \"./middlewares/page\";\nimport unserializeWithFile from \"./middlewares/unserialize\";\nimport aliasDriverRollupPlugin from './compiler/plugins/rollup-plugin-alias-driver';\n\nimport { createServer as createViteServer } from \"vite\";\nimport tsconfigPaths from 'vite-tsconfig-paths'\n\nimport { IConfig } from \"./config\";\nimport getPort, { makeRange as portNumbers } from \"get-port\";\n\nimport pureDevCache from \"./middlewares/pureDevCache\";\nimport { getAddress, getDefeaultRoute, logFrame } from \"./util\";\nimport path, { join } from \"path\";\n\nexport function setupBasicServer (c: IConfig) {\n  const app = new Koa()\n  app.use(koaBody({\n    multipart: true\n  }))\n  app.use(cors())\n  app.use(staticServe(c.publicDirectory))\n  app.use(async (ctx, next) => {\n    await next()\n  })\n  app.use(unserializeWithFile())\n\n  return app\n}\n\nasync function startApp(app: Application, c: IConfig) {\n\n  const port = await getPort({\n    port: c.port ? c.port : process.env.PORT ? Number(process.env.PORT) : portNumbers(9000, 9100)\n  })\n\n  app.listen(port)\n\n  // const defaultView = getDefeaultRoute(c.pages)\n\n  let address = getAddress()\n  \n  const allList = c.pages.filter(v => !v.dir).map(v => {\n    return `\n      ${v.name}:\n      localhost: ${chalk.green(`http://localhost:${port}${v.path}`)}\n      ${address ? `ip: ${chalk.green(`http://${address}:${port}${v.path}`)}` : ''  }\n    `\n  }).join('\\n')\n\n\n  logFrame(`\n    Tarat App Server started at\n\n    ${allList}\n  `)\n\n  return app\n}\n\nexport async function createDevServer (c: IConfig) {  \n  const app = setupBasicServer(c)\n\n  app.use(pureDevCache({\n    config: c\n  }))\n\n  app.use(taratRunner({\n    config: c\n  }))\n\n  const vite = await createViteServer({\n    root: c.cwd,\n    server:{ middlewareMode: 'ssr' },\n    plugins: [\n      tsconfigPaths(),\n      { ...aliasDriverRollupPlugin(c, 'client'), enforce: 'pre' },\n    ],\n    resolve: {\n      extensions: ['.mjs', '.js', '.jsx', '.ts', '.tsx', '.json'],\n      alias: [\n        {\n          find: 'tarat/core',\n          replacement: 'tarat/core/dist/core.client.js',\n        },\n      ]\n    }\n  })\n\n  app.use(e2k(vite.middlewares))\n\n\n  app.use(page({\n    config: c,\n    pages: c.pages,\n    vite,\n  }))\n\n  startApp(app, c)\n}\n\n\nexport async function createServer(c: IConfig) {\n  const app = setupBasicServer(c)\n \n  app.use(staticServe(c.buildDirectory))\n\n  app.use(taratRunner({\n    config: c\n  }))\n\n  app.use(page({\n    config: c,\n    pages: c.pages,\n  })) \n\n  await startApp(app, c)\n\n  return app\n}","import acorn, { parse as acornParse } from 'acorn'\nimport * as walk from 'acorn-walk'\nimport { set, get } from 'lodash'\nimport type {\n  ArrowFunctionExpression,\n  AssignmentExpression,\n  CallExpression, FunctionDeclaration,\n  Identifier,\n  MemberExpression,\n  ObjectPattern,\n  VariableDeclarator\n} from 'estree'\n\nimport { hookFactoryFeatures, THookDeps } from 'tarat/core'\nimport {\n  hasSourceHookFactoryNames,\n  hookFactoryNames,\n  initiativeComputeHookFactoryNames\n} from 'tarat/core'\n\nconst composeName = 'compose'\n\n/**\n * must use the export from tarat hoo\n */\nfunction isHookCaller (node: CallExpression) {\n  return node.type === 'CallExpression' && \n    (node.callee.type === 'Identifier' && hookFactoryNames.includes(node.callee.name))\n}\n\nfunction isWritor (node: CallExpression) {\n  return node.type === 'CallExpression' && \n    (node.callee.type === 'Identifier' && initiativeComputeHookFactoryNames.includes(node.callee.name))\n}\n\nfunction isComposeCaller (node: CallExpression) {\n  return node.type === 'CallExpression' && \n    (node.callee.type === 'Identifier' && composeName === node.callee.name)\n}\n\nfunction getMemberExpressionKeys (m: MemberExpression, keys: string[] = []): string[] {\n  if (m.property.type === 'Identifier' ) {\n    const cur = m.property.name\n\n    switch (m.object.type) {\n      case 'MemberExpression':\n        return getMemberExpressionKeys(m.object, keys.concat(cur))\n        break;\n      case 'Identifier':\n        return keys.concat(m.object.name).concat(cur)\n        break\n      default:\n        console.error('[getMemberExpressionKeys] unexpect node type', (m as any))\n        break\n    }\n  }\n  return keys\n}\n\ntype TBMNode = FunctionDeclaration | ArrowFunctionExpression\n\n\ninterface IScopeValueBase {\n  variablesNode: MemberExpression | Identifier\n  sourceHook: CallExpression\n  originIdentifier?: string\n  type: string\n}\ninterface IScopeValue extends IScopeValueBase {\n  type: 'hook'\n  hookIndex: number,\n}\ninterface IScopeValue2 extends IScopeValueBase {\n  type: 'compose'\n  composeIndex: number,\n}\n\ninterface IScopeMap {\n  [variableNameOrMemberKeys: string]: IScopeMap | IScopeValue | IScopeValue2\n}\n/**\n * all drivers must be called at top\n */\nfunction collectHookVaraibles (BMNode: TBMNode) {\n  const scopeMap: IScopeMap = {}\n\n  let hookIndex = 0\n  let composeIndex = 0\n\n  walk.ancestor(BMNode as any, {\n    CallExpression(n, s, ancestor) {\n      const isHook = isHookCaller(n as any as CallExpression)\n      const isCompose = isComposeCaller(n as any as CallExpression)\n      if (isHook || isCompose) {\n        const hookVariable = ancestor[ancestor.length - 2] as any as AssignmentExpression | VariableDeclarator\n        switch (hookVariable.type) {\n          case 'AssignmentExpression':\n            if (hookVariable.left.type === 'MemberExpression') {\n              const memberKeys = getMemberExpressionKeys(hookVariable.left)\n              \n              if (isHook) {\n                set(scopeMap, memberKeys, {\n                  type: 'hook',\n                  variablesNode: hookVariable.left,\n                  sourceHook: n,\n                  hookIndex: hookIndex++,\n                })\n              } else if (isCompose) {\n                set(scopeMap, memberKeys, {\n                  type: 'compose',\n                  variablesNode: hookVariable.left,\n                  sourceHook: n,\n                  composeIndex: composeIndex++,\n                })\n              }\n            }\n            break\n          case 'VariableDeclarator':\n            {\n              let names: { origin?: string, name: string }[] = []\n              switch (hookVariable.id.type) {\n                case 'Identifier':\n                  names = [{\n                    name: hookVariable.id.name\n                  }]\n                  break\n                case 'ObjectPattern':\n                  hookVariable.id.properties.forEach(p => {\n                    switch (p.type) {\n                      case 'Property':\n                        if (p.key.type === 'Identifier' && p.value.type === 'Identifier') {\n                          names.push({\n                            origin: p.key.name,\n                            name: p.value.name,\n                          })\n                        }\n                        break\n                      case 'RestElement':\n                        throw new Error('[ObjectPattern.RestElement] doesnt supported')\n                    }\n                  })\n                  break\n              }\n\n              if (isHook) {\n                names.forEach(({ origin, name }) => {\n                  set(scopeMap, name, {\n                    type: 'hook',\n                    variablesNode: hookVariable.id,\n                    sourceHook: n,\n                    hookIndex: hookIndex++,\n                    originIdentifier: origin,\n                  })\n                })\n              } else if (isCompose) {\n                names.forEach(({ origin, name }) => {\n                  set(scopeMap, name, {\n                    type: 'compose',\n                    variablesNode: hookVariable.id,\n                    sourceHook: n,\n                    originIdentifier: origin,\n                    composeIndex: composeIndex++,\n                  })\n                })\n              }\n            }\n            break\n        }\n      }\n      // if (isCompose) {\n      //   console.log('isCompose: ', ancestor);\n      // }\n    }\n  })\n\n  return scopeMap\n}\n\nfunction findInScopeMap (s: IScopeMap, targetHook: CallExpression) {\n  let found: IScopeValue | IScopeValue2 | undefined\n  Object.keys(s).forEach(k => {\n    if (!found) {\n      if (s[k].sourceHook) {\n        // @ts-ignore\n        const match = ['start', 'end'].every(p => s[k].sourceHook[p] === targetHook[p])\n        if (match) {\n          found = s[k] as IScopeValue\n        }\n      } else {\n        found = findInScopeMap(s[k] as IScopeMap, targetHook)\n      }\n    }\n  })\n  return found\n}\n\nfunction findParentCallerHook (ancestor: acorn.Node[]) {\n  let i = ancestor.length - 2\n  let parent: any = ancestor[i]\n\n  let parentCallerHook: CallExpression | undefined;\n\n  while (i >= 0 && parent) {\n    if (parent.type === 'CallExpression') {\n      if (isHookCaller(parent)) {\n        parentCallerHook = parent\n        break\n      }\n    }\n    i--\n    parent = ancestor[i]\n  }\n  return parentCallerHook\n}\n\n\n/**\n * find the callled hook caller in other caller hook\n */\ntype TOriginDepsMap = Map<number, {\n  get: Set<THookDeps[0][2][0]>,\n  set: Set<THookDeps[0][2][0]>,\n  ic: boolean // if is like \"inputCompute\" pattern\n}>\nfunction collectCallerWithAncestor (BMNode: TBMNode, scope: IScopeMap) {\n  const depsMap: TOriginDepsMap = new Map\n  \n  walk.ancestor(BMNode as any, {\n    CallExpression (n, s, ancestor) {\n      const { callee } = (n as any as CallExpression)\n      const hasArguments = (n as any as CallExpression)['arguments']?.length > 0\n      \n      let existSourceInScope: CallExpression | undefined\n\n      let lastCalleeName: string = ''\n\n      switch (callee.type) {\n        // scene: \"callee()\"\n        case 'Identifier':\n          const calleeName = callee.name\n          const scopeValue = get(scope, calleeName)\n          if (scopeValue) {\n            existSourceInScope = scopeValue.sourceHook as CallExpression\n          }\n          lastCalleeName = calleeName\n          break\n        // scene: \"aaa.bbb.callee()\" or \"otherComposeHookResult.xxxCallee()\"\n        case 'MemberExpression':\n          const calleeKeys = getMemberExpressionKeys(callee)\n          existSourceInScope = get(scope, calleeKeys.slice(0, -1))?.sourceHook as CallExpression\n          lastCalleeName = calleeKeys[calleeKeys.length - 1]\n          break\n      }\n\n      /** find which hook use this */\n      if (existSourceInScope) {\n        \n        const parentCallerHook = findParentCallerHook(ancestor)\n\n        if (parentCallerHook) {\n\n          const v1 = findInScopeMap(scope, existSourceInScope)\n          const parentCaller = findInScopeMap(scope, parentCallerHook)\n\n          if (parentCaller?.type === 'hook') {\n            let deps = depsMap.get(parentCaller.hookIndex)\n            if (!deps) {\n              deps = {\n                get: new Set(),\n                set: new Set(),\n                ic: isWritor(parentCaller.sourceHook),\n              }\n              depsMap.set(parentCaller.hookIndex, deps)\n            }\n\n            switch (v1?.type) {\n              case 'hook':\n                /**\n                 * @TODO\n                 * consider a case that calling writePrisma.remove() hasnt arguments but should set in \"set\"\n                 */\n                if (hasArguments || isWritor(v1.sourceHook)) {\n                  deps.set.add(v1.hookIndex)\n                } else {\n                  deps.get.add(v1.hookIndex)\n                }  \n                break\n              case 'compose':\n                let name = v1.originIdentifier ? v1.originIdentifier : lastCalleeName\n                if (hasArguments) {\n                  deps.set.add(['c', v1.composeIndex, name])\n                } else {\n                  deps.get.add(['c', v1.composeIndex, name])\n                }\n                break\n            }\n          }\n\n        }\n      }\n    },\n    // just support writeModel/writePrisma/cache\n    Identifier (n, s, ancestor) {\n      if (n.type === 'Identifier') {\n        const { name } = (n as any as Identifier)\n        const hook =  get(scope, name)\n        if (hook && hook.type === 'hook') {\n          const parentCallerHook = findParentCallerHook(ancestor)\n\n          const fromValidParentCallExpression =\n            ancestor[ancestor.length - 2]?.type === 'CallExpression' &&\n            hookFactoryFeatures.withSource.includes((ancestor[ancestor.length - 2] as any).callee.name)\n\n          if (\n            parentCallerHook &&\n            parentCallerHook.callee.type === 'Identifier' &&\n            hookFactoryFeatures.withSource.includes(parentCallerHook.callee.name) &&\n            fromValidParentCallExpression\n          ) {\n            const parentCaller = findInScopeMap(scope, parentCallerHook)\n            \n            if (parentCaller?.type === 'hook') {\n              let deps = depsMap.get(parentCaller.hookIndex)\n              if (!deps) {\n                deps = {\n                  get: new Set(),\n                  set: new Set(),\n                  ic: isWritor(parentCaller.sourceHook),\n                }\n                depsMap.set(parentCaller.hookIndex, deps)\n              }\n              if (deps.ic) {\n                deps.set.add(hook.hookIndex)\n              } else {\n                deps.get.add(hook.hookIndex)\n              }\n            }\n          }\n        }\n      }\n    }\n  })\n  return depsMap\n}\n\nfunction convertDepsToJSON(m: TOriginDepsMap) {\n  const arr: THookDeps = []\n\n  for (const [k, v] of m.entries()) {\n    const r: THookDeps[0] = [\n      v.ic ? 'ic' : 'h',\n      k,\n      [...v.get],\n    ]\n    if (v.set.size > 0) {\n      r.push([...v.set])\n    }\n    arr.push(r)\n  }\n  return arr\n}\n\nfunction genIndexNameMap (scope: IScopeMap) {\n  return Object.keys(scope).map(name => {\n    const v = scope[name]\n    if (v.type === 'hook') {\n      return [\n        v.hookIndex,\n        name\n      ]\n    }\n  }).filter(Boolean) as [number, string][]\n}\n\n\nfunction generateBMDepMaps (BMNode: TBMNode) {\n  const scopeMap = collectHookVaraibles(BMNode)\n  \n  // console.log('scopeMap: ', scopeMap);\n\n  const depsMap = collectCallerWithAncestor(BMNode, scopeMap)\n\n  const nameMap = genIndexNameMap(scopeMap)\n\n  return {\n    nameMap, depsMap\n  }\n}\n\n/**\n * BM defination: the function including above hook factory method.\n */\nfunction matchBMFunction (ast: ReturnType<typeof acornParse>) {\n  const BMNodes: ([acorn.Node, string])[] = []\n  function func(parentFuncNode: acorn.Node, s:any, ancestor: any[]) {\n    let found = false\n    \n    walk.ancestor(parentFuncNode, {\n      CallExpression (n) {\n        if (!found) {\n          const r = isHookCaller(n as any as CallExpression)\n          if (r) {\n            found = true\n            if (parentFuncNode.type === 'ArrowFunctionExpression') {\n              const declaration: VariableDeclarator = ancestor[ancestor.length - 2] as VariableDeclarator\n              if (!declaration.id) {\n              }\n              if (declaration.id.type === 'Identifier') {\n                BMNodes.push(\n                  [parentFuncNode, declaration.id.name]\n                )\n              }\n            } else if (parentFuncNode.type === 'FunctionDeclaration') {\n              if ((parentFuncNode as any as FunctionDeclaration).id?.type === 'Identifier') {\n                BMNodes.push([parentFuncNode, (parentFuncNode as any as FunctionDeclaration).id!.name])\n              }\n            }\n          }\n        }\n      }\n    })\n  }\n\n  walk.ancestor(ast as any, {\n    FunctionDeclaration: func,\n    ArrowFunctionExpression: func,\n  })\n\n  return BMNodes\n}\n\nexport function parseDeps (hookCode: string) {\n  \n  // const ast: any = babelParse(hookCode, {\n  //   sourceType: 'module'\n  // });\n  const ast = acornParse(hookCode, {\n    ecmaVersion: 'latest',\n    sourceType: 'module'\n  });\n\n  const BMFunctionNodes = matchBMFunction(ast)\n\n  const allBMDeps = BMFunctionNodes.map((n, i) => {\n    if (i === 0) {\n    }\n    const { nameMap, depsMap } = generateBMDepMaps((Array.isArray(n) ? n[0] : n) as any)\n    \n    const arr = convertDepsToJSON(depsMap)\n    \n    return  {\n      [n[1]]: {\n        names: nameMap,\n        deps: arr\n      },\n    }\n  }).reduce((p, n) => Object.assign(p, n), {})\n\n  return allBMDeps\n}\n","export const injectTagStart = '/**. auto generated by tarat */'\nexport const injectTagEnd = '/** auto generated by tarat .*/'\n\nexport const autoGeneratedFileTag = '@@tarat generated file'\n\nexport const autoGeneratedTip = () => [\n  '//',\n  `// ${autoGeneratedFileTag}`,\n  '// provide by @tarat',\n  '// warning: auto generated by tarat.do not modifed this file',\n  '//'\n]\n\n","import { IConfig } from \"../config\";\nimport * as fs from 'fs'\nimport * as path from 'path'\nimport { equalFileContent, loadJSON } from \"../util\";\nimport * as prismaInternals from '@prisma/internals'\nimport os from 'os'\nimport { cp } from \"shelljs\";\nimport { camelCase } from 'camel-case'\nimport { autoGeneratedTip } from \"./constants\";\n\ninterface IEnhancement {\n  extraRelation: {\n    from: {\n      model: string\n      field: string\n    },\n    type: '1:1' | '1:n' | 'n:1' | 'n:n'\n    to: {\n      model: string\n      field: string\n    }\n  }[]\n  modelAddition: {\n    name: string,\n    fields: {\n      name: string\n      type: string\n      extra: string\n    }[]\n  }[]\n}\n\nfunction findDependentPrisma (c: IConfig) {\n  const schemaFiles: string[] = []\n\n  c.dependencyModules.forEach(moduleName => {\n    const dir = path.join(c.cwd, 'node_modules', moduleName)\n\n    const depSchemaPath = path.join(dir, c.buildDirectory, c.modelsDirectory, 'schema.prisma')\n    const r2 = fs.existsSync(depSchemaPath)\n\n    if (r2) {\n      schemaFiles.push(depSchemaPath)\n    }\n  })\n\n  return schemaFiles.map(filePath => fs.readFileSync(filePath).toString())\n}\n\ninterface IParsedSchemaStruct {\n  name: string\n  fieldLines: string[]\n}\n\nfunction pickExpectModel (schemaContents: string[]) {\n  const contents = schemaContents.map(content => {\n    return content.replace(/model \\w+ {[\\w\\W\\n]*?}/g, '')\n  })\n\n  return contents\n}\n\nfunction lowerFirst (str: string) {\n  return str ? str[0].toLowerCase() + str.substring(1) : str\n}\n\nfunction getSourceReferrenceType (source: IParsedSchemaStruct, targetProp: string) {\n  let type = ''\n  source.fieldLines.forEach(line => {\n    const row = line.split(' ').filter(Boolean).map(s => s.trim())\n    \n    if (!type && row[0] === targetProp) {\n      type = row[1]\n    }\n  })\n\n  if (!type) {\n    throw new Error(`[getSourceReferrenceType] can not find ${targetProp} in source(name=${source.name})`)\n  }\n\n  return type\n}\n\nasync function generateNewSchema (c: IConfig, schemaContentArr: string[], enhanceJSON?: IEnhancement) {\n  const schemaStructArr = await Promise.all(schemaContentArr.map(async schemaContent => {\n    const model = await prismaInternals.getDMMF({\n      datamodel: schemaContent\n    })\n    const models = model.datamodel.models\n    \n    const modelsStruct = models.map((n: any) => {\n      const { name } = n\n      const r = schemaContent.match(new RegExp(`model ${name} {[\\\\w\\\\W\\\\n]*?}`, 'g'))\n      return {\n        name,\n        fieldLines: r?.[0]?.split('\\n').slice(1, -1) || []\n      }\n    })\n    \n\n    return modelsStruct\n  }))\n  const schemaStructArrFlat:IParsedSchemaStruct[] = schemaStructArr.flat()\n  const manyToManyCenteralModels: IParsedSchemaStruct[] = []\n\n  if (enhanceJSON) {\n    enhanceJSON.extraRelation?.forEach(relation => {\n      const source = schemaStructArrFlat.find(t => t.name === relation.from.model)\n      const target = schemaStructArrFlat.find(t => t.name === relation.to.model)\n\n      if (!source || !target) {\n        throw new Error(`[generateNewSchema] cannot found the source (name=${relation.from.model}) or target (name=${relation.to.model})`)\n      }\n\n      // prisma doc:https://www.prisma.io/docs/concepts/components/prisma-schema/relations/one-to-one-relations\n      switch (relation.type) {\n        case '1:1':\n          {\n            source.fieldLines.push(`${relation.from.field} ${target.name}?`)\n\n            const type = getSourceReferrenceType(source, 'id')\n            target.fieldLines.push(`${lowerFirst(source.name)} ${source.name} @relation(fields: [${relation.to.field}], references:[id])`)\n            target.fieldLines.push(`${relation.to.field} ${type} @unique`)\n          }\n          break\n        case '1:n':\n          {\n            source.fieldLines.push(`${relation.from.field} ${target.name}[]`)\n            target.fieldLines.push(`${lowerFirst(source.name)} ${source.name} @relation(fields: [${relation.to.field}], references:[id])`)\n            const type = getSourceReferrenceType(source, 'id')\n            target.fieldLines.push(`${relation.to.field} ${type}`)\n          }\n          break\n        case 'n:1':\n          {\n            const type = getSourceReferrenceType(source, 'id')\n            source.fieldLines.push(`${lowerFirst(target.name)} ${target.name} @relation(fields: [${relation.from.field}], references:[id])`)\n            source.fieldLines.push(`${relation.from.field} ${type}`)\n            target.fieldLines.push(`${relation.to.field} ${source.name}[]`)\n          }\n          break\n        case 'n:n':\n          {\n            const centeralModelName = `Many${source.name}ToMany${target.name}`\n            const sourceReferType = getSourceReferrenceType(source, 'id')\n            const targetReferType = getSourceReferrenceType(target, 'id')\n\n            const m2mModel = {\n              name: centeralModelName,\n              fieldLines: [\n                `${lowerFirst(source.name)} ${source.name} @relation(fields: [${relation.from.field}], references: [id])`,\n                `${relation.from.field} ${sourceReferType}`,\n                `${lowerFirst(target.name)} ${target.name} @relation(fields: [${relation.to.field}], references: [id])`,\n                `${relation.to.field} ${targetReferType}`,\n                `@@id([${relation.from.field}, ${relation.to.field}])`\n              ]\n            }\n            manyToManyCenteralModels.push(m2mModel)\n\n            source.fieldLines.push(`${relation.from.field} ${m2mModel.name}[]`)\n            target.fieldLines.push(`${relation.to.field} ${m2mModel.name}[]`)\n          }\n          break\n        default:\n          const text = relation.type ? `[generateNewSchema] unexpected relation type \"${relation.type}\"` : `[generateNewSchema] must specific a relation type in [ 1:1, 1:n, n:1, n:n]`\n          throw new Error(text)\n      }\n    })\n  }\n\n  const newSchemaContent = schemaStructArrFlat.concat(manyToManyCenteralModels).map(m => {\n    return [\n      `model ${m.name} {`,\n      ...m.fieldLines,\n      '}'\n    ].join('\\n')\n  }).join('\\n')\n\n  return newSchemaContent\n}\n\nfunction readExsitPrismaPart (c: IConfig) {\n  const modelsDir = path.join(c.cwd, c.modelsDirectory)\n  const existPrismaParts: string[] = []\n  fs.readdirSync(modelsDir).forEach(file => {\n    if (new RegExp(`${c.prismaModelPart}$`).test(file)) {\n      const schema = fs.readFileSync(path.join(modelsDir, file)).toString()\n      existPrismaParts.push(schema)\n    }\n  })\n\n  return existPrismaParts\n}\n\n\nasync function generateSchemaFile (file: string, str: string[]) {\n  const lines = autoGeneratedTip().concat(str).join('\\n')\n\n  const formatResult = await prismaInternals.formatSchema({ schema: lines })\n\n  fs.writeFileSync(file, formatResult?.trimEnd() + os.EOL)\n}\n\nexport async function composeSchema (c: IConfig) {\n  const { modelEnhanceFile: enhanceFile, modelTargetFile: targetFile } = c.pointFiles\n  \n  let enhanceJSON: IEnhancement | undefined\n  if (fs.existsSync(enhanceFile)) {\n    enhanceJSON = loadJSON(enhanceFile)\n  }\n  if (c.model.engine === 'prisma') {\n    const taratPrismas = findDependentPrisma(c)\n\n    const partSchema = path.join(c.cwd, c.modelsDirectory, `schema.${c.prismaModelPart}`)\n    if (!fs.existsSync(partSchema) && taratPrismas.length > 0) {\n      cp(targetFile, partSchema)\n    }\n\n    const existPrismaPart = readExsitPrismaPart(c)\n\n    /**\n     * if detect the dependent prisma, must backup orignal schema.prisma\n     */\n    if (taratPrismas.length > 0) {\n      const newSchemaContent = await generateNewSchema(\n        c,\n        existPrismaPart.concat(taratPrismas),\n        enhanceJSON\n      )\n  \n      const existPrismaPartWithoutModels = pickExpectModel(existPrismaPart)\n      \n      await generateSchemaFile(\n        targetFile,\n        [\n          '// original writing schema',\n          ...existPrismaPartWithoutModels,\n          '// auto composing schema ',\n          newSchemaContent,\n        ]\n      )\n    }\n  }\n}\n\ninterface IDependencyHook {\n  name: string\n  modulePath: string\n}\nconst referrenceHookTemp = (arg: { path: string }) => `\n${autoGeneratedTip().join('\\n')}\nexport { default } from '${arg.path}'\n`\nasync function generateReferrenceDrivers (c: IConfig, h: IDependencyHook[]) {\n  const curDriversDir = path.join(c.cwd, c.driversDirectory, c.composeDriversDirectory)\n\n  if (!fs.existsSync(curDriversDir) && h.length > 0) {\n    fs.mkdirSync(curDriversDir)\n  }\n\n  await Promise.all(h.map(obj => new Promise<void>((res, rej) => {\n    const code = referrenceHookTemp({ path: obj.modulePath })\n    const f = path.join(curDriversDir, `${obj.name}${c.ts ? '.ts' : '.js'}`)\n\n    if (fs.existsSync(f)) {\n      const existCode = fs.readFileSync(f).toString()\n      if (equalFileContent(code, existCode)) {\n        return res()\n      }\n    }\n    \n    fs.writeFile(f, code, (err) => {\n      if (err) {\n        rej(err)\n      } else {\n        res()\n      }\n    })\n    // fs.writeFileSync(f, code)\n  })))\n}\n\nexport async function composeDriver(c: IConfig) {\n  const dependencyDrivers: IDependencyHook[] = []\n  \n  c.dependencyModules.forEach(moduleName => {\n    const dir = path.join(c.cwd, 'node_modules', moduleName)\n    const distDriversDir = path.join(dir, c.buildDirectory, c.driversDirectory)\n    if (!fs.existsSync(distDriversDir)) {\n      console.error(`[composeDriver] hasnt drivers in \"${moduleName}/${c.buildDirectory}/${c.driversDirectory}\"`)\n      return\n    }\n\n    fs.readdirSync(distDriversDir)\n      .filter(f => /\\.js$/.test(f) && !/deps\\.js$/.test(f))\n      .forEach(f => {\n        const { name } = path.parse(f)\n        let driverName = name\n        if (dependencyDrivers.find(v => v.name === driverName)) {\n          driverName = camelCase(`${moduleName}.${name}`)\n          if (dependencyDrivers.find(v => v.name === driverName)) {\n            throw new Error('[tarat] can not handle hook name confict betwwen all dependency modules')\n          }\n        }\n        dependencyDrivers.push({\n          name: driverName,\n          modulePath: `${moduleName}/${c.buildDirectory}/${c.driversDirectory}/${name}`\n        })\n      })\n  })\n  await generateReferrenceDrivers(c, dependencyDrivers)\n}\n","import {\n  createSourceFile,\n  SyntaxKind,\n  Node,\n  ScriptTarget,\n  createProgram,\n  SourceFile,\n  CallExpression,\n} from 'typescript'\n\ninterface TSVisitor {\n  [k: number]: (node: Node, ancestor: Node[]) => void\n}\n\nexport function printAST(code, node, depth = 0) {\n  console.log(\n    new Array(depth + 1).join('----'), \n    SyntaxKind[node.kind],\n    `(${node.kind})`,\n    code.substring(node.pos, node.end),\n    // node.pos,\n    // node.end\n  );\n  depth++;\n  node.getChildren().forEach(c => printAST(code, c, depth));\n}\n\nfunction tsWalker (sourceFile: SourceFile, nodes: Node[], visitor: TSVisitor, ancestor: Node[] = []) {\n  nodes.forEach(n => {\n    const children = n.getChildren(sourceFile)\n    const newAncestor = ancestor.concat(n)\n    children.forEach(cn => {\n      if (visitor[cn.kind]) {\n        visitor[cn.kind](cn, newAncestor)\n      }\n    })\n    tsWalker(sourceFile, children, visitor, newAncestor)\n  })\n}\n\nexport const removedFunctionBodyPlaceholder = `() => { /*! can not invoked in current runtime */ }`\nexport function removeFunctionBody(code: string, names: string[]) {\n\n  const sourceFile = createSourceFile('cfb.ts', code , ScriptTarget.ESNext)\n  const nodes = sourceFile.getChildren()\n\n  const bodyRangeArr: [number, number][] = []\n\n  tsWalker(sourceFile, nodes, {\n    [SyntaxKind.CallExpression]: (n: CallExpression, a) => {\n      const calleeName = n.expression.getText(sourceFile)\n      // console.log('n: ', n);\n      if (names.includes(calleeName) && n.arguments.length) {\n        // console.log('n2: ', code.substring(n.pos, n.end));\n        n.arguments.forEach(n => {\n          switch (n.kind) {\n            case SyntaxKind.ArrowFunction:\n            case SyntaxKind.FunctionExpression:\n              const { pos, end  } = n\n              bodyRangeArr.push([pos, end]);\n              break\n            case SyntaxKind.Identifier:\n              /** @TODO: Identifier maybe a function variable. should climb current scope */\n              break\n          }\n        })\n      }\n    }\n  })\n\n  let gap = 0\n  let newCode = code\n  bodyRangeArr.forEach(([st, ed], i) => {\n    newCode = \n      newCode.substring(0, st - gap) + \n      removedFunctionBodyPlaceholder +\n      newCode.substring(ed - gap);\n    gap += ed - st - removedFunctionBodyPlaceholder.length\n  })\n  return newCode\n}\n\n","import * as prismaInternals from '@prisma/internals'\nimport acorn, { parse as acornParse } from 'acorn'\nimport { hookFactoryFeatures } from 'tarat/core'\nimport * as walk from 'acorn-walk'\nimport { IConfig, IViewConfig } from \"../config\";\nimport * as fs from 'fs'\nimport * as path from 'path'\nimport { compile, name } from 'ejs'\nimport { AcornNode, InputOptions, ModuleFormat, OutputOptions, Plugin, rollup, RollupBuild } from 'rollup' \nimport resolve from '@rollup/plugin-node-resolve';\nimport { babel  } from '@rollup/plugin-babel';\nimport json from '@rollup/plugin-json'\nimport commonjs from \"@rollup/plugin-commonjs\";\nimport postcss from 'rollup-plugin-postcss'\nimport tsPlugin from 'rollup-plugin-typescript2'\nimport * as prettier from 'prettier'\nimport * as esbuild from 'esbuild';\nimport { defineRoutesTree, IRouteChild } from \"../config/routes\";\nimport autoExternal from 'rollup-plugin-auto-external';\nimport replace from '@rollup/plugin-replace';\nimport rollupAlias from '@rollup/plugin-alias'\nimport dts from \"rollup-plugin-dts\"\nimport { emptyDirectory, loadJSON, logFrame, lowerFirst, traverseDir } from \"../util\";\nimport chalk from \"chalk\";\nimport { cp } from \"shelljs\";\nimport { ArrowFunctionExpression, CallExpression, FunctionExpression, Identifier, ImportDeclaration, Program } from 'estree';\nimport { traverse, last } from '../util';\nimport aliasDriverRollupPlugin from './plugins/rollup-plugin-alias-driver';\nimport { removeFunctionBody } from './ast';\nimport esbuildAliasPlugin from 'esbuild-plugin-alias';\n\nconst templateFile = './routesTemplate.ejs'\nconst templateFilePath = path.join(__dirname, templateFile)\n\nconst templateClientFile = './routesClientTemplate.ejs'\nconst templateClientFilePath = path.join(__dirname, templateClientFile)\n\nconst defaultTsconfigJSON = path.join(__dirname, './defaultTsconfig.json')\n\nconst routesTemplate = compile(fs.readFileSync(templateFilePath).toString())\nconst routesClientTemplate = compile(fs.readFileSync(templateClientFilePath).toString())\n\n\nexport interface IBuildOption {\n  input: InputOptions\n  output: OutputOptions\n}\n\n/**\n * searches for tsconfig.json file starting in the current directory, if not found\n * use the default tsconfig.json provide by tarat\n */\nexport function getTSConfigPath (c: IConfig) {\n  const tsconfigFile = path.join(c.cwd, 'tsconfig.json')\n  if (fs.existsSync(tsconfigFile)) {\n    return tsconfigFile\n  }\n  console.log(`[getTSConfigPath] using default tsconfig setting: ${defaultTsconfigJSON}`)\n  return defaultTsconfigJSON\n}\n\nfunction getPostCssConfigPath (c: IConfig) {\n  let pp = ''\n  fs.readdirSync(c.cwd).forEach(f => {\n    if (/postcss\\.config/.test(f)) {\n      if (pp) {\n        throw new Error(`[getPostCssConfigPath] duplcate postcsss.config file exist in ${c.cwd}`)\n      } else {\n        pp = path.join(c.cwd, f)\n      }\n    }\n  })\n  if (pp && fs.existsSync(pp)) {\n    return pp\n  }\n}\n\nexport async function build (c: IConfig, op: IBuildOption) {\n\n  let bundle: RollupBuild | undefined\n  try {\n    bundle = await rollup(op.input)\n    await generateOutput(c, bundle, op.output)\n  } catch (e) {\n    console.error(e)\n  } finally {\n    await bundle?.close()\n  }\n}\n\nasync function generateOutput(c: IConfig, bundle: RollupBuild, op: IBuildOption['output']) {\n  const { output } = await bundle.generate(op)\n  for (const chunkOrAsset of output) {\n\n    if (chunkOrAsset.type === 'asset') {\n      const target = path.join(op.dir || c.pointFiles.outputDir, chunkOrAsset.fileName)\n      fs.writeFileSync(target, chunkOrAsset.source)\n\n    } else if (chunkOrAsset.type === 'chunk') {\n      let dir = op.dir\n      if (!op.dir) {\n        dir = op.file?.replace(chunkOrAsset.fileName, '')\n      }\n      if (dir && !fs.existsSync(dir)) {\n        fs.mkdirSync(dir)\n      }\n      if (op.file) {\n        fs.writeFileSync(op.file, chunkOrAsset.code)\n      } else {\n        fs.writeFileSync(path.join(dir!, chunkOrAsset.fileName), chunkOrAsset.code)\n      }\n    }\n  }\n}\n\n\n\nexport function getPlugins (input: {\n  css: string | boolean,\n  mode: 'dev' | 'build',\n  target?: 'browser' | 'node' | 'unit',\n  alias?: { [k: string]: string },\n  runtime?: 'server' | 'client'\n}, c: IConfig) {\n  const { runtime, alias, css, mode, target = 'node' } = input\n\n  console.log('runtime: ', runtime);\n  const plugins = [\n    runtime ? aliasDriverRollupPlugin(c, runtime) : undefined,\n    replace({\n      preventAssignment: true,\n      'process.env.NODE_ENV': mode === 'build' ? '\"production\"' : '\"development\"'\n    }),\n    rollupAlias({\n      entries: {\n        '@': c.cwd,\n        ...(alias || {}),\n      }\n    }),\n    json(),\n    commonjs(),\n    resolve({\n      browser: target === 'browser',\n      extensions: ['.jsx', '.tsx', '.js', '.cjs', '.mjs', '.ts', '.json']\n    }),\n    babel({\n      exclude: 'node_modules/**',\n      presets: ['@babel/preset-react']\n    }),\n    postcss({\n      config: {\n        path: getPostCssConfigPath(c),\n        ctx: {}\n      },\n      extract: typeof css === 'string'  ? css.replace(c.pointFiles.outputDir, '').replace(/^\\//, '') : css, // only support relative path\n    }),\n    autoExternal({\n      peerDependencies: target !== 'browser', // only under browser need bundle all dependencies\n      dependencies: mode === 'dev' && target !== 'browser'\n    }),\n    c.ts ? tsPlugin({\n      clean: true,\n      tsconfig: getTSConfigPath(c)\n    }) : undefined,\n  ].filter(Boolean)\n\n  return plugins as Plugin[]\n}\n\n\nfunction getEntryFile (c: IConfig) {\n  let f = path.join(c.cwd, c.appDirectory, c.entryServer)\n\n  const tsx = '.tsx'\n  const jsx = '.jsx'\n\n  if (c.ts && fs.existsSync(`${f}${tsx}`)) {\n    return {\n      file: `${f}${tsx}`,\n      ext: tsx\n    }\n  }\n  if (!c.ts && fs.existsSync(`${f}${jsx}`)) {\n    return {\n      file: `${f}${jsx}`,\n      ext: jsx\n    }\n  }\n}\nfunction upperFirst (s: string) {\n  s = s.replace(/\\:|-/g, '_')\n  return s ? (s[0].toUpperCase() + s.substring(1)) : ''\n}\n\nfunction generateRoutesContent (routes: IRouteChild[], depth = 0, parentNmae = ''): string {\n  const pathObj: { [p: string]: IRouteChild } = {}\n  routes.forEach(r => {\n    if (pathObj[r.path]) {\n      const exist = pathObj[r.path]\n      if (exist.dir) {\n        Object.assign(exist, {\n          dir: false,\n          file: r.file,\n          id: r.id\n        })\n      } else {\n        Object.assign(exist, {\n          dir: false,\n          children: r.children\n        })\n      }\n    } else {\n      pathObj[r.path] = Object.assign({}, r)\n    }\n  })\n\n\n  const routeArr = Object.values(pathObj).map((r, i) => {\n    let Cpt = ''\n    let element = ''\n\n    if (r.dir) {\n    } else {\n      if (r.file) {\n        Cpt = `${upperFirst(parentNmae)}${upperFirst(r.name)}`\n      } else {\n        const childIndex = r.children.find(c => c.index)\n        Cpt = childIndex ? `${upperFirst(parentNmae)}${upperFirst(r.name) || '/'}${upperFirst(childIndex.name)}` : ''\n      }\n      if (Cpt) {\n        element = `element={<${Cpt} />}`\n      }\n    }\n\n    return [\n      r.index ? `<Route index ${element} >` : `<Route path=\"${r.name}\" ${element} >`,\n      r.children.length > 0 ? generateRoutesContent(r.children, depth + 1, r.name) : '',\n      `</Route>`\n    ].join('\\n');\n  })\n\n  return routeArr.join('\\n')\n}\n\nfunction generateRoutesImports (routes: IRouteChild[], parentNmae = '') {\n  let importsArr: [string, string][] = []\n  routes.forEach(r => {\n    if (!r.dir && r.file) {\n      importsArr.push([\n        `${upperFirst(parentNmae)}${upperFirst(r.name)}`,\n        r.file,\n      ])\n    }\n    if (r.children) {\n      const childImports = generateRoutesImports(r.children, r.name)\n      importsArr.push(...childImports)\n    }\n  })\n\n  return importsArr\n}\n\nfunction implicitImportPath (path: string, ts: boolean) {\n  if (ts) {\n    return path.replace(/\\.ts(x?)$/, '')\n  }\n\n  return path\n}\n\nexport async function buildServerRoutes(c: IConfig) {\n\n  const {\n    outputDir,\n    autoGenerateServerRoutes,\n    distServerRoutes,\n    autoGenerateClientRoutes,\n    outputAppServerDir,\n    distServerRoutesCSS\n  } = c.pointFiles\n\n  const routesTreeArr = defineRoutesTree(c.pages)\n\n  const imports = generateRoutesImports(routesTreeArr)\n\n  const importsWithAbsolutePathClient = imports.map(([n, f]) => {\n    return `import ${n} from '${implicitImportPath(path.join(c.cwd, f), c.ts)}'`\n  }).join('\\n')\n  const importsWithAbsolutePathServer = imports.map(([n, f]) => {\n    return `import ${n} from '${implicitImportPath(path.join(c.cwd, f), c.ts)}'`\n  }).join('\\n')\n\n  const includingTs = imports.some(([n, f]) => /\\.ts(x?)$/.test(f))\n  if (includingTs && !c.ts) {\n    throw new Error('[tarat] you are using ts file. please specific \"ts:true\" in tarat.config.js')\n  }\n\n  const r = generateRoutesContent(routesTreeArr)\n\n  let entryCSSPath = ''\n  if (c.entryCSS) {\n    entryCSSPath = `import \"${c.entryCSS}\"`\n  }\n\n  const routesStr = routesTemplate({\n    imports: importsWithAbsolutePathServer,\n    entryCSSPath,\n    routes: r\n  })\n  fs.writeFileSync(autoGenerateServerRoutes, prettier.format(routesStr))\n\n  const routesStr2 = routesClientTemplate({\n    imports: importsWithAbsolutePathClient,\n    routes: r\n  })\n  // generate for vite.js\n  fs.writeFileSync(autoGenerateClientRoutes, prettier.format(routesStr2))\n\n  const myPlugins = getPlugins({\n    css: distServerRoutesCSS,\n    mode: 'dev',\n    runtime: 'server'\n  }, c)\n  /**\n   * compile routes.server to js\n   * routes.client doesnt need becase of vite\n   */\n  const inputOptions: IBuildOption = {\n    input: {\n      cache: false,\n      input: autoGenerateServerRoutes,\n      plugins: myPlugins\n    },\n    output: {\n      file: distServerRoutes,\n      format: 'commonjs',\n    }\n  }\n\n  await build(c, inputOptions)  \n}\n\nexport async function buildEntryServer (c: IConfig) {\n\n  const r = getEntryFile(c)\n  \n  if (r?.file) {\n    const { distEntryJS: distEntry, distEntryCSS: distEntryCss }  = c.pointFiles\n\n    const inputOptions: IBuildOption = {\n      input: {\n        input: r.file,\n        plugins: getPlugins({\n          mode: 'dev',\n          css: distEntryCss,\n          runtime: 'server'\n        }, c),\n      },\n      output: {\n        file: distEntry,\n        format: 'commonjs',\n\n      },\n    }\n\n    await build(c, inputOptions)\n\n    return {\n      entry: distEntry,\n      css: distEntryCss\n    }\n  }\n}\n\n/**\n * make sure hook will import the same module type\n */\nexport function replaceImportDriverPath (\n  sourceFile: string,\n  format: esbuild.Format,\n  env: 'client' | 'server',\n) {\n  const reg = /from (?:'|\")([\\w\\/-]*)(?:'|\")/g\n  const reg2 = /require\\((?:'|\")([\\w\\/-]*)(?:'|\")/g\n\n  const code = fs.readFileSync(sourceFile).toString()\n  const r = code.match(reg)\n  const r2 = code.match(reg2)\n  const importModules = r || r2\n\n  if (\n    importModules && importModules.length > 0 &&\n    importModules.some(m => /\\/drivers\\/[\\w-]+/.test(m))\n  ) {  \n    const c2 = code.replace(/\\/(drivers)\\/([\\w-]+)/, `/${env}/$1/${format}/$2`)\n    fs.writeFileSync(sourceFile, c2)\n  }\n}\n\n/**\n * under ESM remove all unused imports and directly import\n * ```\n * import 'foo'\n * import XX from 'foo'\n * import XX, { a } from 'foo'\n * import { a } from 'foo'\n * import * as XX from 'foo'\n * ```\n * @param sourceFile \n */\nexport function removeUnusedImports(sourceFile: string) {\n  const code = fs.readFileSync(sourceFile).toString()\n\n  let ast: ReturnType<typeof acornParse>\n  try {\n    ast = acornParse(code, { sourceType: 'module', ecmaVersion: 'latest' });\n  } catch (e) {\n    console.error(`[removeUnusedImports] acorn parse error`, e)\n    return\n  }\n  const removeImportRange: [number, number][] = []\n  if (ast.type === 'Program') {\n    ast.body.forEach((n) => {\n      switch (n.type) {\n        case 'ImportDeclaration':\n          {\n            const w2 = n.specifiers.map(s => s.local.name)\n            let r = false\n            walk.simple(ast as any, {\n              Identifier (n: any) {\n                r = r || w2.includes((n as Identifier).name)\n              },\n              ExportNamedDeclaration (n: any) {\n                traverse(n, (pathArr: string[], value: Identifier) => {\n                  if (value.type === 'Identifier' && last(pathArr) === 'local') {\n                    r = r || w2.includes(value.name)\n                  }\n                })    \n              }\n            })\n            if (!r) {\n              removeImportRange.push([n.start, n.end])\n            }  \n          }\n          break\n      }\n    })\n  }\n\n  let gap = 0\n  let newCode = code\n  removeImportRange.forEach(([st, ed]) => {\n    newCode = \n      newCode.substring(0, st - gap) + \n      newCode.substring(ed - gap);\n    gap += ed - st\n  })\n\n  fs.writeFileSync(sourceFile, newCode)\n}\n\nfunction clearFunctionBodyEsbuildPlugin (names: string[]): esbuild.Plugin {\n\n  return {\n    name: 'clear tarat runtime function body',\n    setup(build) {\n      /** @TODO should match more explicit */\n      build.onLoad({ filter: /drivers\\// }, args => {\n        const code = fs.readFileSync(args.path).toString()\n\n        const newCode2 = removeFunctionBody(code, names)\n\n        return {\n          contents: newCode2,\n          loader: /\\.ts$/.test(args.path) ? 'ts' : 'js'\n        }\n      })\n    },\n  }\n}\n\nfunction aliasAtCodeToCwd (c: IConfig): esbuild.Plugin {\n  return {\n    name: 'aliasAtCodeToCwd',\n    setup(build) {\n      build.onLoad({ filter: /drivers\\// }, args => {\n        const code = fs.readFileSync(args.path).toString()\n        const newCode2 = code.replace(/@\\//, c.cwd + '/')\n        return {\n          contents: newCode2,\n          loader: /\\.ts$/.test(args.path) ? 'ts' : 'js'\n        }\n      });\n    },\n  };\n};\n\nasync function esbuildDrivers (\n  c: IConfig,\n  outputDir: string, \n  format: esbuild.Format,\n  env?: 'client' | 'server',\n) {\n  const { drivers } = c\n  let includingTs = false\n  const points: string[] = []\n  drivers.map(h => {\n    const { filePath, name } = h\n    if (/\\.(m)?(j|t)s$/.test(filePath)) {\n      points.push(filePath)\n\n      includingTs = /\\.ts(x)?$/.test(filePath) || includingTs\n    }\n  })\n\n  if (includingTs && !c.ts) {\n    throw new Error('[tarat] you are using ts file. please specific ts:true in tarat.config.js')\n  }\n\n\n  const buildOptions: esbuild.BuildOptions = {\n    entryPoints: points,\n    bundle: true,\n    outdir: outputDir,\n    platform: 'node',\n    format,\n    treeShaking: true,\n    external: [\n      ...Object.keys(c.pacakgeJSON.dependencies || {}),\n      ...Object.keys(c.pacakgeJSON.devDependencies || {}),\n      ...Object.keys(c.pacakgeJSON.peerDependencies || {})\n    ],\n    plugins: [\n      aliasAtCodeToCwd(c)\n    ],\n  }\n  if (env === 'client') {\n    buildOptions.plugins.push(\n      clearFunctionBodyEsbuildPlugin(hookFactoryFeatures.serverOnly)\n    )\n  }\n\n  // check tsconfig\n  if (includingTs) {\n    buildOptions.tsconfig = getTSConfigPath(c)\n  }\n\n  await esbuild.build(buildOptions)\n\n  if (fs.existsSync(outputDir)) {\n    traverseDir(outputDir, (obj) => {\n      if (!obj.isDir) {\n        removeUnusedImports(obj.path)\n        if (env) {\n          replaceImportDriverPath(obj.path, format, env)\n        }\n      }\n    })\n  }\n}\n\nfunction buildDTS (c: IConfig, filePath: string, outputFile: string) {\n  const tsconfigPath = getTSConfigPath(c)\n  const json = loadJSON(tsconfigPath)\n\n  const options: IBuildOption = {\n    input: {\n      input: filePath,\n      plugins: [\n        dts()\n      ]\n    },\n    output: {\n      file: outputFile,\n      format: 'esm'\n    }\n  }\n\n  return build(c, options)\n}\n\nexport async function driversType(c: IConfig, outputDir: string) {\n  const { drivers, driversDirectory } = c\n  const cwdDirversDir = path.join(c.cwd, driversDirectory)\n  const generateFiles: {\n    name: string,\n    destFile:string,\n    destDir: string\n    relativePath: string\n  }[] = []\n\n  await Promise.all(drivers.filter(({ filePath }) => /\\.ts$/.test(filePath)).map(async h => {\n    const { filePath, name , dir } = h\n    const relativePath = path.relative(cwdDirversDir, dir)\n    const destDir = path.join(outputDir, relativePath)\n    const destFile = path.join(destDir, `${name}.d.ts`)\n    generateFiles.push({\n      name,\n      destDir,\n      relativePath,\n      destFile,\n    })\n    await buildDTS(c, filePath, destFile)\n  }))\n\n  return generateFiles\n}\n\n/**\n * for server side running\n */\nexport async function buildDrivers (c: IConfig) {\n  const {\n    outputClientDriversDir,\n    outputServerDriversDir,\n    outputDriversDir,\n  } = c.pointFiles\n  const {\n    esmDirectory,\n    cjsDirectory\n  } = c\n\n  // 1.must build source dir first prevent to traverse below children dir \n  await esbuildDrivers(c, outputDriversDir, 'esm')\n  // 2.run after source building\n  await Promise.all([\n    // cjs\n    esbuildDrivers(c, path.join(outputClientDriversDir, cjsDirectory), 'cjs', 'client'),\n    esbuildDrivers(c, path.join(outputServerDriversDir, cjsDirectory), 'cjs', 'server'),\n    // esm\n    esbuildDrivers(c, path.join(outputClientDriversDir, esmDirectory), 'esm', 'client'),\n    esbuildDrivers(c, path.join(outputServerDriversDir, esmDirectory), 'esm', 'server'),\n  ])\n\n  if (c.ts) {\n    try {\n      const files = await driversType(c, outputDriversDir)\n      files.forEach(({ name, destFile, relativePath }) => {\n        [cjsDirectory, esmDirectory].forEach(formatDir => {\n          [outputClientDriversDir, outputServerDriversDir].forEach(envDir => {\n            const dir = path.join(envDir, formatDir, relativePath)\n            if (!fs.existsSync(dir)) {\n              fs.mkdirSync(dir)\n            }\n            cp(destFile, dir)\n          })\n        })\n      })\n    } catch (e) {\n      console.error(e)\n      logFrame(chalk.red('build hook dts fail'))\n    }\n  }\n}\n\nexport async function buildModelIndexes(c: IConfig) {\n  if (c.model.engine === 'prisma') {\n    const schemaFile = path.join(c.cwd, c.modelsDirectory, c.targetSchemaPrisma)\n    const schemaIndexesFile = path.join(c.cwd, c.modelsDirectory, c.schemaIndexes + (c.ts ? '.ts' : '.js'))\n    if (fs.existsSync(schemaFile)) {\n      try {\n        const model = await prismaInternals.getDMMF({\n          datamodel: fs.readFileSync(schemaFile).toString()\n        })\n        const models = model.datamodel.models\n        const indexesStr = models.map(m => {\n          return `export const ${m.name} = \"${lowerFirst(m.name)}\"`\n        }).join('\\n')\n  \n        fs.writeFileSync(schemaIndexesFile, prettier.format(indexesStr))\n      } catch (e) {\n        console.error('[buildModelIndexes] building indexes')\n      }\n    }\n  }\n}","import * as fs from 'fs'\nimport * as path from 'path'\nimport { IConfig } from \"../config\";\nimport { loadJSON, traverseDir } from '../util';\nimport { build, IBuildOption, getPlugins } from \"./prebuild\";\n\n\nexport async function buildClientRoutes (c: IConfig) {\n  const {\n    outputDir,\n    autoGenerateClientRoutes,\n    clientRoutes,\n    outputAppClientDir,\n    clientRoutesCSS\n  } = c.pointFiles\n\n  const myPlugins = getPlugins({\n    css: clientRoutesCSS,\n    mode: 'build',\n    target: 'browser',\n    alias: {\n      'tarat/core': 'tarat/core/dist/index.client.js',\n    },\n    runtime: 'client'\n  }, c)\n\n  const pkg = loadJSON(path.join(c.cwd, 'package.json'))\n\n  const op: IBuildOption = {\n    input: {\n      input: autoGenerateClientRoutes,\n      plugins: myPlugins,\n    },\n    output: {\n      file: clientRoutes,\n      name: `${pkg.name}TaratApp`,\n      format: 'umd',\n      // manualChunks: {\n      //   dll: [\n      //     'react',\n      //     'react-dom',\n      //     'tarat/core',\n      //     'tarat/connect'\n      //   ]\n      // }\n    }\n  }\n  \n  await build(c, op)\n}\n\n\nexport async function buildViews (c: IConfig) {\n  const {\n    outputViewsDir,\n  } = c.pointFiles\n\n  const originalViewsDir = path.join(c.cwd, c.viewsDirectory)\n\n  const queue: Promise<void>[] = []\n\n  const originDirverDir = path.join(c.cwd, c.driversDirectory)\n\n  traverseDir(originalViewsDir, f => {\n    const wholePath = path.join(originalViewsDir, f.file)\n    if (f.isDir) {\n      if (!fs.existsSync(wholePath)) {\n        fs.mkdirSync(wholePath)\n      }\n    } else if (/\\.(j|t)sx$/.test(f.file)) {\n      queue.push(new Promise<void>(async resolve => {\n        const file = f.file\n        const parsed = path.parse(file)\n\n        const relativePath = path.relative(originalViewsDir, f.dir)\n\n        const input = path.join(originalViewsDir, relativePath, file)\n        const outputJS = path.join(outputViewsDir, relativePath, `${parsed.name}.js`)\n        const outputCSS = path.join(outputViewsDir, relativePath, `${parsed.name}.css`)\n  \n        const externalDrivers = fs.existsSync(originDirverDir) ? fs.readdirSync(originDirverDir).map(f => {\n          return path.join(c.cwd, c.driversDirectory, f)\n        }) : []\n  \n        const op: IBuildOption = {\n          input: {\n            input,\n            plugins: getPlugins({\n              css: outputCSS,\n              mode: 'build',\n              target: 'unit',\n              alias: {\n                'tarat/core': 'tarat/core/dist/index.client.js',\n              }\n            }, c),\n            external: externalDrivers  // use other external parameter types will conflict with auto-external plugins\n          },\n          output: {\n            file: outputJS,\n            format: 'esm'\n          }\n        }\n        await build(c, op)\n\n        resolve()\n      }))\n    }\n  })\n  await Promise.all(queue)\n}\n","import { parseDeps } from \"./analyzer\";\nimport * as prettier from 'prettier'\nimport * as fs from 'fs'\nimport * as path from 'path'\nimport { IConfig } from \"../config\";\nimport { equalFileContent, loadJSON, tryMkdir } from \"../util\";\nimport { autoGeneratedFileTag, injectTagEnd, injectTagStart } from \"./constants\";\n\nfunction template (\n  origin: string,\n  deps: string,\n  assigns: string,\n  filePath: string\n) {\n  return `${origin}\n${injectTagStart}\n${filePath}\n${deps}\n${assigns}\n${injectTagEnd}\n`\n}\n\nfunction cleanOriginalCodeTag (code: string) {\n  const rows = code.split('\\n')\n  let si = -1\n  let ei = -1\n  rows.forEach((r, i) => {\n    if (r.trim() === injectTagStart) {\n      si = i\n    } else if (r.trim() === injectTagEnd) {\n      ei = i\n    }\n  })\n  if (si >= 0 && ei >= 0) {\n    return rows.slice(0, si).concat(rows.slice(ei + 1)).join('\\n')\n  }\n  return code\n}\n\nexport function injectDeps (c: IConfig, targetFile: string) {\n  const code = fs.readFileSync(targetFile).toString()\n  const parsed = path.parse(targetFile)\n\n  const depsJSONPath = path.join(c.pointFiles.outputDriversDir, `${parsed.name}.deps.json`)\n\n  if (fs.existsSync(depsJSONPath)) {\n    const depsJSON = loadJSON(depsJSONPath)\n\n    const AUTO_PARSER = 'autoParser'\n\n    const arr = Object.keys(depsJSON).map(funcName => {\n      return `Object.assign(${funcName}, {\n  __deps__: ${AUTO_PARSER}.${funcName}.deps,\n  __names__: ${AUTO_PARSER}.${funcName}.names,\n  __name__: \"${funcName}\" })`\n    })\n\n    const codeIncludingDeps = template(\n      cleanOriginalCodeTag(code),\n      `const ${AUTO_PARSER} = ${JSON.stringify(depsJSON).replace(/\"/g, \"'\")}`,\n      arr.join('\\n').replace(/\"/g, \"'\"),\n      `// location at:${targetFile}`\n    )\n\n    const codeIncludingDepsWithFormat = prettier.format(codeIncludingDeps, { \n      parser: 'typescript'\n    })\n\n    if (\n      !equalFileContent(code, codeIncludingDepsWithFormat) &&\n      !(new RegExp(autoGeneratedFileTag).test(code))\n    ) {\n      fs.writeFileSync(targetFile, codeIncludingDepsWithFormat)\n    }\n  } else {\n    throw new Error(`[injectDeps] not found deps.json with path \"${depsJSONPath}\"`)\n  }\n}\n\n/** @TODO 1.integrated to the vite.plugin 2.upgrade to typescript */\nexport function generateHookDeps (c: IConfig) {\n  const {\n    outputClientDriversDir,\n    outputServerDriversDir,\n    outputDriversDir,\n  } = c.pointFiles\n  const {\n    esmDirectory,\n    cjsDirectory\n  } = c\n\n  const driversDir = outputDriversDir\n \n  const sourceCodeDir = path.join(c.cwd, c.driversDirectory)\n\n  fs.readdirSync(driversDir).forEach(f => {\n    const compiledFile = path.join(driversDir, f)\n    const name = f.replace(/\\.js$/, '')\n    if (/\\.js$/.test(f)) {\n      const code = fs.readFileSync(compiledFile).toString()\n\n      const deps = parseDeps(code)      \n\n      const devDriversDir = path.join(c.pointFiles.outputDriversDir)\n      if (!fs.existsSync(devDriversDir)) {\n        tryMkdir(devDriversDir)\n      }\n\n      // json in tarat: generate deps.json\n      fs.writeFileSync(path.join(c.pointFiles.outputDriversDir, `${name}.deps.json`), (JSON.stringify(deps)))\n    \n      // modify original hook file\n      injectDeps(c, compiledFile);\n\n      [outputClientDriversDir, outputServerDriversDir].forEach(envDir => {\n        [esmDirectory, cjsDirectory].forEach(formatDir => {\n\n          const cjsOutputFile = path.join(envDir, formatDir, `${name}.js`)\n          injectDeps(c, cjsOutputFile)\n        })\n      })\n    }\n  })\n}","import * as path from 'path'\nimport exitHook from 'exit-hook'\nimport chokidar from 'chokidar'\nimport chalk from 'chalk'\nimport {\n  IConfig,\n  readConfig,\n  createDevServer,\n  composeSchema,\n  composeDriver,\n  buildEntryServer, buildDrivers, buildServerRoutes,\n  generateHookDeps,\n  emptyDirectory, logFrame, tryMkdir, time, buildModelIndexes\n} from \"../src/\";\n\nexport async function buildEverything (c: IConfig) {\n  \n  const cost = time()\n\n  await buildModelIndexes(c).then(() => {\n    logFrame(`build modelIndexes end. cost ${chalk.green(cost())} sec`)\n  })\n\n  await buildDrivers(c).then(() => {\n    generateHookDeps(c)\n    logFrame(`build drivers end. cost ${chalk.green(cost())} sec`)\n  })\n\n  // must executeafter driver building\n  await Promise.all([\n    buildServerRoutes(c).then(() => {\n      logFrame(`build routes end. cost ${chalk.green(cost())} sec`)\n    }),\n    buildEntryServer(c).then(() => {\n      logFrame(`build entryServer end. cost ${chalk.green(cost())} sec`)\n    })\n  ])\n}\n\nexport function prepareDir (c: IConfig) {\n  emptyDirectory(c.pointFiles.outputDir)\n\n  Object.entries(c.pointFiles).forEach(([name, path]) => {\n    if (/Dir$/.test(name)) {\n      tryMkdir(path)\n    }\n  })\n  // append\n  tryMkdir(path.join(c.pointFiles.outputDriversDir, c.esmDirectory))\n  tryMkdir(path.join(c.pointFiles.outputDriversDir, c.cjsDirectory))\n\n  tryMkdir(path.join(c.pointFiles.outputClientDriversDir, c.esmDirectory))\n  tryMkdir(path.join(c.pointFiles.outputClientDriversDir, c.cjsDirectory))\n\n  tryMkdir(path.join(c.pointFiles.outputServerDriversDir, c.esmDirectory))\n  tryMkdir(path.join(c.pointFiles.outputServerDriversDir, c.cjsDirectory))\n}\n\n\nasync function startCompile (c: IConfig) {\n\n  const cost = time()\n\n  logFrame('prepare')\n\n  prepareDir(c)\n\n  await buildEverything(c)\n\n  const watchTarget = [\n    path.join(c.cwd, c.appDirectory),\n    path.join(c.cwd, c.driversDirectory),\n    path.join(c.cwd, c.viewsDirectory),\n  ]\n\n  const watcher = chokidar.watch(watchTarget, {\n    persistent: true,\n    ignoreInitial: true,\n    awaitWriteFinish: {\n      stabilityThreshold: 100,\n      pollInterval: 100,\n    },\n  })\n  const watcher2 = chokidar.watch([\n    path.join(c.cwd, c.modelsDirectory, c.targetSchemaPrisma)\n  ], {\n    persistent: true,\n    ignoreInitial: true,\n    awaitWriteFinish: {\n      stabilityThreshold: 100,\n      pollInterval: 100,\n    },\n  })\n  watcher2.on('change', path => {\n    buildModelIndexes(c).then(() => {\n      logFrame(`build modelIndexes end. cost ${chalk.green(cost())} sec`)\n    })  \n  })\n\n  watcher\n    .on('error', console.error)\n    .on('change', (path) => {\n      if (/(\\.css|\\.less|\\.scss)$/.test(path)) {\n        return\n      }\n\n      const cost = time()\n      logFrame(`[change] re-run compiling from \"${path}\"`)\n      readConfig({ cwd: c.cwd }).then(newConfig => {\n        return buildEverything(newConfig)\n      }).then(() => {\n        logFrame(`[change] comipling ${chalk.green(cost())} sec`)\n      })\n    })\n    .on('add', (path) => {\n      logFrame(`[add] ${chalk.green('re-run compiling')}  from \"${path}\"`)\n      readConfig({ cwd: c.cwd }).then(newConfig => {\n        buildEverything(newConfig)\n      })\n    })\n    .on('unlink', (path) => {\n      logFrame(`[unlink] ${chalk.red('re-run compiling')}  from \"${path}\"`)\n      readConfig({ cwd: c.cwd }).then(newConfig => {\n        buildEverything(newConfig)\n      })\n    })\n\n  \n  exitHook(() => {\n    console.log('[startCompile] exithook callback')\n    watcher.close()\n  })  \n}\n\nexport default async (cwd: string) => {\n  const config = await readConfig({\n    cwd,\n  })\n    \n  await startCompile(config)\n\n  composeSchema(config)\n  composeDriver(config)\n\n  await createDevServer(config)\n}\n","import chalk from 'chalk'\nimport { fstat } from 'fs'\nimport * as path from 'path'\nimport * as fs from 'fs'\nimport { cp } from \"shelljs\"\nimport {\n  composeSchema,\n  composeDriver,\n  readConfig,\n  buildClientRoutes,\n  buildViews,\n  generateHookDeps,\n  logFrame,\n  time,\n} from \"../src/\"\nimport { buildEverything, prepareDir } from \"./dev\"\n\nexport default async (cwd: string) => {\n\n  const config = await readConfig({\n    cwd,\n    isProd: true,\n  })\n\n  const allCost = time()\n\n  logFrame(('prepare dir and cp models'))\n\n  prepareDir(config)\n\n  composeSchema(config)\n  composeDriver(config)\n\n  if (fs.existsSync(path.join(cwd, config.modelsDirectory, config.targetSchemaPrisma))) {\n    cp(\n      path.join(cwd, config.modelsDirectory, config.targetSchemaPrisma),\n      path.join(config.pointFiles.outputModelsDir, config.targetSchemaPrisma)\n    )\n  }\n\n  logFrame(('build routes/entryServer/drivers'))\n\n  const cost = time()\n\n  await buildEverything(config)\n  \n  logFrame((`build routes/entryServer/drivers end. cost ${chalk.green(cost())} seconds`))\n\n  logFrame(('build clientRoutes/views'))\n\n  const cost2 = time()\n\n  await Promise.all([\n    buildClientRoutes(config).then(() => {\n      logFrame((`build ${chalk.green('clientRoutes')} end. cost ${chalk.green(cost2())} seconds`))    \n    }),\n    buildViews(config).then(() => {\n      logFrame((`build ${chalk.green('views')} end. cost ${chalk.green(cost2())} seconds`))    \n    }),\n  ])\n\n  logFrame((`build end. cost ${chalk.green(allCost())} seconds`))\n}\n","import {\n  readConfig,\n  createServer\n} from \"../src\";\n\nexport default async function start (cwd: string) {\n  const config = await readConfig({\n    cwd,\n    isProd: true,\n  })\n\n  config.pointFiles = config.buildPointFiles\n\n  await createServer(config)\n}","import {\n  readConfig,\n  driversType,\n} from \"../src/\"\n\nexport default async (cwd: string) => {\n\n  const config = await readConfig({\n    cwd,\n  })\n}","import cacFactory from \"cac\";\nimport pkg from '../package.json'\nimport dev from \"./dev\";\nimport build from './build'\nimport start from './start'\nimport any from \"./any\";\nconst cac = cacFactory('tarat-server')\n\nconst cwd = process.cwd()\n\ncac\n  .command('dev', 'start service for development')\n  .option('--port <port>', 'service port', {\n    default: '9001'\n  })\n  .action(async (options: { port: number }) => {\n    dev(cwd)\n  })\n\ncac\n  .command('build', 'compile current project')\n  .action(async () => {\n    build(cwd)\n  })\n\ncac\n  .command('start', 'starting project as service')\n  .action(async () => {\n    start(cwd)\n  })\n\ncac\n  .command('any')\n  .action(async () => {\n    any(cwd)\n  })\ncac.help()\ncac.version(pkg.version)\ncac.parse()\n\n"],"names":["path","fs","rimraf","lowerFirst","os","isEqual","existsSync","chalk","l","loadPlugin","join","prismaInternals","getPlugin","parseWithUndef","BINARY_FILE_KEY_SPLIT_CHAR","get","BINARY_FILE_TYPE_PLACEHOLDER","set","Runner","startdReactiveChain","stringifyWithUndef","templateFile","templateFilePath","template","compile","RenderDriver","renderWithDriverContext","debuggerLog","renderToString","Koa","koaBody","cors","staticServe","getPort","portNumbers","taratRunner","vite","createViteServer","tsconfigPaths","e2k","hookFactoryNames","initiativeComputeHookFactoryNames","walk","hookFactoryFeatures","acornParse","cp","camelCase","createSourceFile","ScriptTarget","SyntaxKind","build","rollup","replace","rollupAlias","json","commonjs","resolve","babel","postcss","autoExternal","tsPlugin","prettier","esbuild","dts","chokidar","exitHook","cacFactory"],"mappings":"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"}